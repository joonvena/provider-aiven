name: aiven/aiven
resources:
    aiven_account Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Account resource allows the creation and management of an Aiven Account.
        name: aiven_account Resource - terraform-provider-aiven
        title: aiven_account Resource - terraform-provider-aiven
        argumentDocs:
            account_id: (String, Deprecated) Account id
            create: (String)
            create_time: (String) Time of creation
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            is_account_owner: (Boolean, Deprecated) If true, user is part of the owners team for this account
            name: (String) Account name
            owner_team_id: (String, Deprecated) Owner team id
            primary_billing_group_id: (String, Deprecated) Billing group id
            read: (String)
            tenant_id: (String) Tenant id
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            update_time: (String) Time of last update
        importStatements:
            - terraform import aiven_account.account1 account_id
    aiven_account_authentication Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Account Authentication resource allows the creation and management of an Aiven Account Authentications.
        name: aiven_account_authentication Resource - terraform-provider-aiven
        title: aiven_account_authentication Resource - terraform-provider-aiven
        argumentDocs:
            account_id: (String) The unique id of the account.
            authentication_id: (String) Account authentication id
            auto_join_team_id: (String) Team ID
            create: (String)
            create_time: (String) Time of creation
            default: (String)
            delete: (String)
            email: (String) Field name for user email
            enabled: (Boolean) Status of account authentication method. The default value is false.
            first_name: (String) Field name for user's first name
            id: (String) The ID of this resource.
            identity: (String) Field name for user's identity. This field must always exist in responses, and must be immutable and unique. Contents of this field are used to identify the user. Using user ID (such as unix user id) is highly recommended, as email address may change, requiring relinking user to Aiven user.
            last_name: (String) Field name for user's last name
            name: (String) The name of the account authentication.
            read: (String)
            real_name: (String) Field name for user's full name. If specified, first_name and last_name mappings are ignored
            saml_acs_url: (String) SAML Assertion Consumer Service URL
            saml_certificate: (String) SAML Certificate
            saml_digest_algorithm: (String) Digest algorithm. This is an advanced option that typically does not need to be set.
            saml_entity_id: (String) SAML Entity id
            saml_field_mapping: '(Block Set, Max: 1) Map IdP fields (see below for nested schema)'
            saml_idp_login_allowed: (Boolean) Set to 'true' to enable IdP initiated login
            saml_idp_url: (String) SAML Idp URL
            saml_metadata_url: (String) SAML Metadata URL
            saml_signature_algorithm: (String) Signature algorithm. This is an advanced option that typically does not need to be set.
            saml_variant: (String) SAML server variant
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) The account authentication type. The possible values are internal and saml.
            update: (String)
            update_time: (String) Time of last update
        importStatements:
            - terraform import aiven_account_authentication.foo account_id/authentication_id
    aiven_account_team Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Account Team resource allows the creation and management of an Account Team.
        name: aiven_account_team Resource - terraform-provider-aiven
        title: aiven_account_team Resource - terraform-provider-aiven
        argumentDocs:
            account_id: (String) The unique account id
            create: (String)
            create_time: (String) Time of creation
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            name: (String) The account team name
            read: (String)
            team_id: (String) The auto-generated unique account team id
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            update_time: (String) Time of last update
        importStatements:
            - terraform import aiven_account_team.account_team1 account_id/team_id
    aiven_account_team_member Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Account Team Member resource allows the creation and management of an Aiven Account Team Member. During the creation of aiven_account_team_memberresource, an email invitation will be sent to a user using user_email address. If the user accepts an invitation, he or she will become a member of the account team. The deletion of aiven_account_team_member will not only delete the invitation if one was sent but not yet accepted by the user, it will also eliminate an account team member if one has accepted an invitation previously.
        name: aiven_account_team_member Resource - terraform-provider-aiven
        title: aiven_account_team_member Resource - terraform-provider-aiven
        argumentDocs:
            accepted: (Boolean) is a boolean flag that determines whether an invitation was accepted or not by the user. false value means that the invitation was sent to the user but not yet accepted. true means that the user accepted the invitation and now a member of an account team.
            account_id: (String) The unique account id. This property cannot be changed, doing so forces recreation of the resource.
            create: (String)
            create_time: (String) Time of creation
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            invited_by_user_email: (String) The email address that invited this user.
            read: (String)
            team_id: (String) An account team id. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            user_email: (String) Is a user email address that first will be invited, and after accepting an invitation, he or she becomes a member of a team. This property cannot be changed, doing so forces recreation of the resource.
        importStatements:
            - terraform import aiven_account_team_member.foo account_id/team_id/user_email
    aiven_account_team_project Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Account Team Project resource allows the creation and management of an Account Team Project. It is intended to link an existing project to the existing account team. It is important to note that the project should have an account_id property set equal to the account team you are trying to link to this project.
        name: aiven_account_team_project Resource - terraform-provider-aiven
        title: aiven_account_team_project Resource - terraform-provider-aiven
        argumentDocs:
            account_id: (String) The unique account id
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            project_name: (String) The name of an already existing project
            read: (String)
            team_id: (String) An account team id
            team_type: (String) The Account team project type. The possible values are admin, developer, operator and read_only.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - terraform import aiven_account_team_project.account_team_project1 account_id/team_id/project_name
    aiven_aws_privatelink Resource - terraform-provider-aiven:
        subCategory: ""
        description: The AWS Privatelink resource allows the creation and management of Aiven AWS Privatelink for a services.
        name: aiven_aws_privatelink Resource - terraform-provider-aiven
        title: aiven_aws_privatelink Resource - terraform-provider-aiven
        argumentDocs:
            aws_service_id: (String) AWS service ID
            aws_service_name: (String) AWS service name
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            principals: (Set of String) List of allowed principals
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - terraform import aiven_aws_privatelink.foo project/service_name
    aiven_aws_vpc_peering_connection Resource - terraform-provider-aiven:
        subCategory: ""
        description: The AWS VPC Peering Connection resource allows the creation and management of Aiven AWS VPC Peering Connections.
        name: aiven_aws_vpc_peering_connection Resource - terraform-provider-aiven
        title: aiven_aws_vpc_peering_connection Resource - terraform-provider-aiven
        argumentDocs:
            aws_account_id: (String) AWS account ID. This property cannot be changed, doing so forces recreation of the resource.
            aws_vpc_id: (String) AWS VPC ID. This property cannot be changed, doing so forces recreation of the resource.
            aws_vpc_peering_connection_id: (String) AWS VPC peering connection ID
            aws_vpc_region: (String) AWS region of the peered VPC (if not in the same region as Aiven VPC). This property cannot be changed, doing so forces recreation of the resource.
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            read: (String)
            state: (String) State of the peering connection
            state_info: (Map of String) State-specific help or error information
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            vpc_id: (String) The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
        importStatements:
            - terraform import aiven_aws_vpc_peering_connection.foo project_name/vpc_id/aws_account_id/aws_vpc_id/aws_vpc_region
    aiven_azure_privatelink Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Azure Privatelink resource allows the creation and management of Aiven Azure Privatelink for a services.
        name: aiven_azure_privatelink Resource - terraform-provider-aiven
        title: aiven_azure_privatelink Resource - terraform-provider-aiven
        argumentDocs:
            azure_service_alias: (String) Azure Privatelink service alias
            azure_service_id: (String) Azure Privatelink service ID
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            message: (String) Printable result of the Azure Privatelink request
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            state: (String) Privatelink resource state
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            user_subscription_ids: '(Set of String) A List of allowed Subscription IDs. Maximum length: 16.'
        importStatements:
            - terraform import aiven_azure_privatelink.foo project/service_name
    aiven_azure_privatelink_connection_approval Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Azure privatelink approve resource waits for an aiven privatelink connection on a service and approves it with associated endpoint IP
        name: aiven_azure_privatelink_connection_approval Resource - terraform-provider-aiven
        title: aiven_azure_privatelink_connection_approval Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            default: (String)
            delete: (String)
            endpoint_ip_address: (String) IP address of Azure private endpoint
            id: (String) The ID of this resource.
            privatelink_connection_id: (String) Privatelink connection id
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            state: (String) Privatelink connection state
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - terraform import aiven_azure_privatelink_connection_approval.approval project/service_name
    aiven_azure_vpc_peering_connection Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Azure VPC Peering Connection resource allows the creation and management of Aiven VPC Peering Connections.
        name: aiven_azure_vpc_peering_connection Resource - terraform-provider-aiven
        title: aiven_azure_vpc_peering_connection Resource - terraform-provider-aiven
        argumentDocs:
            azure_subscription_id: (String) Azure Subscription ID. This property cannot be changed, doing so forces recreation of the resource.
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            peer_azure_app_id: (String) Azure app registration id in UUID4 form that is allowed to create a peering to the peer vnet. This property cannot be changed, doing so forces recreation of the resource.
            peer_azure_tenant_id: (String) Azure tenant id in UUID4 form. This property cannot be changed, doing so forces recreation of the resource.
            peer_resource_group: (String) Azure resource group name of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
            peering_connection_id: (String) Cloud provider identifier for the peering connection if available
            read: (String)
            state: (String) State of the peering connection
            state_info: (Map of String) State-specific help or error information
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            vnet_name: (String) Azure Network name. This property cannot be changed, doing so forces recreation of the resource.
            vpc_id: (String) The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
        importStatements:
            - terraform import aiven_azure_vpc_peering_connection.foo project_name/vpc_id/azure_subscription_id/vnet_name
    aiven_billing_group Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Billing Group resource allows the creation and management of Aiven Billing Groups and association with the Projects.
        name: aiven_billing_group Resource - terraform-provider-aiven
        title: aiven_billing_group Resource - terraform-provider-aiven
        argumentDocs:
            account_id: (String, Deprecated) Account id
            address_lines: (Set of String) Address lines
            billing_currency: (String) Billing currency
            billing_emails: (Set of String) Billing contact emails
            billing_extra_text: (String) Billing extra text
            card_id: (String) Credit card id
            city: (String) City
            company: (String) Company name
            copy_from_billing_group: (String) ID of the billing group to copy from
            country_code: (String) Country code
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            name: (String) Billing Group name
            parent_id: (String) An optional property to link a billing group to an already existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.
            read: (String)
            state: (String) State
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            vat_id: (String) VAT id
            zip_code: (String) Zip Code
        importStatements:
            - terraform import aiven_billing_group.bybg1 id
    aiven_cassandra Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Cassandra resource allows the creation and management of Aiven Cassandra services.
        name: aiven_cassandra Resource - terraform-provider-aiven
        title: aiven_cassandra Resource - terraform-provider-aiven
        argumentDocs:
            additional_backup_regions: (List of String) Additional Cloud Regions for Backup Replication.
            additional_disk_space: (String) Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            backup_hour: (Number) The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.
            backup_minute: (Number) The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.
            batch_size_fail_threshold_in_kb: (Number) Fail any multiple-partition batch exceeding this value. 50kb (10x warn threshold) by default.
            batch_size_warn_threshold_in_kb: (Number) Log a warning message on any multiple-partition batch size exceeding this value.5kb per batch by default.Caution should be taken on increasing the size of this thresholdas it can lead to node instability.
            cassandra: (List of Object) Cassandra server provided values (see below for nested schema)
            cassandra_user_config: '(Block List, Max: 1) Cassandra user configurable settings (see below for nested schema)'
            cassandra_version: (String) Cassandra major version.
            cloud_name: (String) Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (aws, azure, do google, upcloud, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like here for Google and here for AWS.
            component: (String)
            components: (List of Object) Service component information objects (see below for nested schema)
            create: (String)
            datacenter: (String) Name of the datacenter to which nodes of this service belong. Can be set only when creating the service.
            default: (String)
            delete: (String)
            description: (String) Description for IP filter list entry.
            disk_space: (String, Deprecated) Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            disk_space_cap: (String) The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
            disk_space_default: (String) The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for disk_space
            disk_space_step: (String) The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. disk_space needs to increment from disk_space_default by increments of this size.
            disk_space_used: (String) Disk space that service is currently using
            host: (String)
            id: (String) The ID of this resource.
            integration_type: (String) Type of the service integration. The only supported value at the moment is read_replica
            ip_filter: (List of String, Deprecated) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            ip_filter_object: '(Block List, Max: 1024) Allow incoming connections from CIDR address block, e.g. ''10.20.0.0/16''. (see below for nested schema)'
            ip_filter_string: (List of String) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            kafka_authentication_method: (String)
            key: (String) Service tag key
            maintenance_window_dow: (String) Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
            maintenance_window_time: (String) Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
            migrate_sstableloader: (Boolean) Sets the service into migration mode enabling the sstableloader utility to be used to upload Cassandra data files. Available only on service create.
            network: (String) CIDR address block.
            plan: (String) Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are hobbyist, startup-x, business-x and premium-x where x is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the Aiven pricing page.
            port: (Number)
            private_access: '(Block List, Max: 1) Allow access to selected service ports from private networks. (see below for nested schema)'
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            project_to_fork_from: (String) Name of another project to fork a service from. This has effect only when a new service is being created.
            project_vpc_id: (String) Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
            prometheus: (Boolean) Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
            public_access: '(Block List, Max: 1) Allow access to selected service ports from the public Internet. (see below for nested schema)'
            read: (String)
            route: (String)
            service_host: (String) The hostname of the service.
            service_integrations: (Block List) Service integrations to specify when creating a service. Not applied after initial service creation (see below for nested schema)
            service_name: (String) Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
            service_password: (String, Sensitive) Password used for connecting to the service, if applicable
            service_port: (Number) The port of the service
            service_to_fork_from: (String) Name of another service to fork from. This has effect only when a new service is being created.
            service_to_join_with: (String) When bootstrapping, instead of creating a new Cassandra cluster try to join an existing one from another service. Can only be set on service creation.
            service_type: (String) Aiven internal service type code
            service_uri: (String, Sensitive) URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
            service_username: (String) Username used for connecting to the service, if applicable
            source_service_name: (String) Name of the source service
            ssl: (Boolean)
            state: (String) Service state. One of POWEROFF, REBALANCING, REBUILDING or RUNNING
            static_ips: (Set of String) Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
            tag: (Block Set) Tags are key-value pairs that allow you to categorize services. (see below for nested schema)
            termination_protection: (Boolean) Prevents the service from being deleted. It is recommended to set this to true for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            usage: (String)
            value: (String) Service tag value
        importStatements:
            - terraform import aiven_cassandra.bar project/service_name
    aiven_cassandra_user Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Cassandra User resource allows the creation and management of Aiven Cassandra Users.
        name: aiven_cassandra_user Resource - terraform-provider-aiven
        title: aiven_cassandra_user Resource - terraform-provider-aiven
        argumentDocs:
            access_cert: (String, Sensitive) Access certificate for the user if applicable for the service in question
            access_key: (String, Sensitive) Access certificate key for the user if applicable for the service in question
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            password: (String, Sensitive) The password of the Cassandra User.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of the user account. Tells whether the user is the primary account or a regular account.
            update: (String)
            username: (String) The actual name of the Cassandra User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        importStatements:
            - terraform import aiven_cassandra_user.foo project/service_name/username
    aiven_clickhouse Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Clickhouse resource allows the creation and management of Aiven Clickhouse services.
        name: aiven_clickhouse Resource - terraform-provider-aiven
        title: aiven_clickhouse Resource - terraform-provider-aiven
        argumentDocs:
            additional_backup_regions: (List of String) Additional Cloud Regions for Backup Replication.
            additional_disk_space: (String) Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            clickhouse: (List of Object) Clickhouse server provided values (see below for nested schema)
            clickhouse_https: (Boolean) Allow clients to connect to clickhouse_https with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
            clickhouse_user_config: '(Block List, Max: 1) Clickhouse user configurable settings (see below for nested schema)'
            cloud_name: (String) Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (aws, azure, do google, upcloud, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like here for Google and here for AWS.
            component: (String)
            components: (List of Object) Service component information objects (see below for nested schema)
            create: (String)
            default: (String)
            delete: (String)
            description: (String) Description for IP filter list entry.
            disk_space: (String, Deprecated) Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            disk_space_cap: (String) The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
            disk_space_default: (String) The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for disk_space
            disk_space_step: (String) The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. disk_space needs to increment from disk_space_default by increments of this size.
            disk_space_used: (String) Disk space that service is currently using
            host: (String)
            id: (String) The ID of this resource.
            integration_type: (String) Type of the service integration. The only supported values at the moment are clickhouse_kafka and clickhouse_postgresql.
            ip_filter: (List of String, Deprecated) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            ip_filter_object: '(Block List, Max: 1024) Allow incoming connections from CIDR address block, e.g. ''10.20.0.0/16''. (see below for nested schema)'
            ip_filter_string: (List of String) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            kafka_authentication_method: (String)
            key: (String) Service tag key
            maintenance_window_dow: (String) Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
            maintenance_window_time: (String) Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
            network: (String) CIDR address block.
            plan: (String) Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are hobbyist, startup-x, business-x and premium-x where x is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the Aiven pricing page.
            port: (Number)
            private_access: '(Block List, Max: 1) Allow access to selected service ports from private networks. (see below for nested schema)'
            privatelink_access: '(Block List, Max: 1) Allow access to selected service components through Privatelink. (see below for nested schema)'
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            project_to_fork_from: (String) Name of another project to fork a service from. This has effect only when a new service is being created.
            project_vpc_id: (String) Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
            prometheus: (Boolean) Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
            public_access: '(Block List, Max: 1) Allow access to selected service ports from the public Internet. (see below for nested schema)'
            read: (String)
            route: (String)
            service_host: (String) The hostname of the service.
            service_integrations: (Block List) Service integrations to specify when creating a service. Not applied after initial service creation (see below for nested schema)
            service_name: (String) Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
            service_password: (String, Sensitive) Password used for connecting to the service, if applicable
            service_port: (Number) The port of the service
            service_to_fork_from: (String) Name of another service to fork from. This has effect only when a new service is being created.
            service_type: (String) Aiven internal service type code
            service_uri: (String, Sensitive) URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
            service_username: (String) Username used for connecting to the service, if applicable
            source_service_name: (String) Name of the source service
            ssl: (Boolean)
            state: (String) Service state. One of POWEROFF, REBALANCING, REBUILDING or RUNNING
            static_ips: (Set of String) Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
            tag: (Block Set) Tags are key-value pairs that allow you to categorize services. (see below for nested schema)
            termination_protection: (Boolean) Prevents the service from being deleted. It is recommended to set this to true for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            usage: (String)
            value: (String) Service tag value
        importStatements:
            - terraform import aiven_clickhouse.clickhouse project/service_name
    aiven_clickhouse_database Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Clickhouse Database resource allows the creation and management of Aiven Clickhouse Databases.
        name: aiven_clickhouse_database Resource - terraform-provider-aiven
        title: aiven_clickhouse_database Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            name: (String) The name of the Clickhouse database. This property cannot be changed, doing so forces recreation of the resource.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            termination_protection: (Boolean) It is a Terraform client-side deletion protections, which prevents the Clickhouse database from being deleted by Terraform. It is recommended to enable this for any production Clickhouse databases containing critical data. The default value is false.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - terraform import aiven_clickhouse_database.clickhouse_db project/service_name/name
    aiven_clickhouse_grant Resource - terraform-provider-aiven:
        subCategory: ""
        description: 'The Clickhouse Grant resource allows the creation and management of Grants in Aiven Clickhouse services. Notes:'
        name: aiven_clickhouse_grant Resource - terraform-provider-aiven
        title: aiven_clickhouse_grant Resource - terraform-provider-aiven
        argumentDocs:
            column: (String) The column that the grant refers to. This property cannot be changed, doing so forces recreation of the resource.
            create: (String)
            database: (String) The database that the grant refers to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            privilege: (String) The privilege to grant, i.e. 'INSERT', 'SELECT', etc. This property cannot be changed, doing so forces recreation of the resource.
            privilege_grant: (Block Set) Configuration to grant a privilege. This property cannot be changed, doing so forces recreation of the resource. (see below for nested schema)
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            role: (String) The role to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            role_grant: (Block Set) Configuration to grant a role. This property cannot be changed, doing so forces recreation of the resource. (see below for nested schema)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            table: (String) The table that the grant refers to. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            user: (String) The user to grant privileges or roles to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            with_grant: (Boolean) If true then the grantee gets the ability to grant the privileges he received too. This property cannot be changed, doing so forces recreation of the resource.
        importStatements: []
    aiven_clickhouse_role Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Clickhouse Role resource allows the creation and management of Roles in Aiven Clickhouse services
        name: aiven_clickhouse_role Resource - terraform-provider-aiven
        title: aiven_clickhouse_role Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            role: (String) The role that is to be created. This property cannot be changed, doing so forces recreation of the resource.
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - terraform import aiven_clickhouse_role.foo project/service_name/role
    aiven_clickhouse_user Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Clickhouse User resource allows the creation and management of Aiven Clikhouse Users.
        name: aiven_clickhouse_user Resource - terraform-provider-aiven
        title: aiven_clickhouse_user Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            password: (String, Sensitive) The password of the clickhouse user.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            required: (Boolean) Indicates if a clickhouse user is required
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            username: (String) The actual name of the Clickhouse user. This property cannot be changed, doing so forces recreation of the resource.
            uuid: (String) UUID of the clickhouse user.
        importStatements:
            - terraform import aiven_clickhouse_user.ch-user project/service_name/username
    aiven_connection_pool Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Connection Pool resource allows the creation and management of Aiven Connection Pools.
        name: aiven_connection_pool Resource - terraform-provider-aiven
        title: aiven_connection_pool Resource - terraform-provider-aiven
        argumentDocs:
            connection_uri: (String, Sensitive) The URI for connecting to the pool
            create: (String)
            database_name: (String) The name of the database the pool connects to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            pool_mode: (String) The mode the pool operates in. The possible values are session, transaction and statement. The default value is transaction.
            pool_name: (String) The name of the created pool. This property cannot be changed, doing so forces recreation of the resource.
            pool_size: (Number) The number of connections the pool may create towards the backend server. This does not affect the number of incoming connections, which is always a much larger number. The default value is 10.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            username: (String) The name of the service user used to connect to the database. To set up proper dependencies please refer to this variable as a reference.
        importStatements:
            - terraform import aiven_connection_pool.mytestpool project/service_name/pool_name
    aiven_flink Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Flink resource allows the creation and management of Aiven Flink services.
        name: aiven_flink Resource - terraform-provider-aiven
        title: aiven_flink Resource - terraform-provider-aiven
        argumentDocs:
            additional_disk_space: (String) Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            cloud_name: (String) Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (aws, azure, do google, upcloud, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like here for Google and here for AWS.
            component: (String)
            components: (List of Object) Service component information objects (see below for nested schema)
            create: (String)
            default: (String)
            delete: (String)
            description: (String) Description for IP filter list entry.
            disk_space: (String, Deprecated) Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            disk_space_cap: (String) The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
            disk_space_default: (String) The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for disk_space
            disk_space_step: (String) The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. disk_space needs to increment from disk_space_default by increments of this size.
            disk_space_used: (String) Disk space that service is currently using
            flink: '(Block List, Max: 1) Flink server provided values (see below for nested schema)'
            flink_user_config: '(Block List, Max: 1) Flink user configurable settings (see below for nested schema)'
            flink_version: (String) Flink major version.
            host: (String)
            host_ports: (List of String) Host and Port of a Flink server
            id: (String) The ID of this resource.
            integration_type: (String) Type of the service integration. The only supported value at the moment is read_replica
            ip_filter: (List of String, Deprecated) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            ip_filter_object: '(Block List, Max: 1024) Allow incoming connections from CIDR address block, e.g. ''10.20.0.0/16''. (see below for nested schema)'
            ip_filter_string: (List of String) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            kafka_authentication_method: (String)
            key: (String) Service tag key
            maintenance_window_dow: (String) Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
            maintenance_window_time: (String) Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
            network: (String) CIDR address block.
            number_of_task_slots: (Number) Task slots per node. For a 3 node plan, total number of task slots is 3x this value.
            plan: (String) Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are hobbyist, startup-x, business-x and premium-x where x is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the Aiven pricing page.
            port: (Number)
            privatelink_access: '(Block List, Max: 1) Allow access to selected service components through Privatelink. (see below for nested schema)'
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            project_vpc_id: (String) Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
            prometheus: (Boolean) Enable prometheus.
            read: (String)
            route: (String)
            service_host: (String) The hostname of the service.
            service_integrations: (Block List) Service integrations to specify when creating a service. Not applied after initial service creation (see below for nested schema)
            service_name: (String) Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
            service_password: (String, Sensitive) Password used for connecting to the service, if applicable
            service_port: (Number) The port of the service
            service_type: (String) Aiven internal service type code
            service_uri: (String, Sensitive) URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
            service_username: (String) Username used for connecting to the service, if applicable
            source_service_name: (String) Name of the source service
            ssl: (Boolean)
            state: (String) Service state. One of POWEROFF, REBALANCING, REBUILDING or RUNNING
            static_ips: (Set of String) Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
            tag: (Block Set) Tags are key-value pairs that allow you to categorize services. (see below for nested schema)
            termination_protection: (Boolean) Prevents the service from being deleted. It is recommended to set this to true for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            usage: (String)
            value: (String) Service tag value
        importStatements:
            - terraform import aiven_flink.flink project/service_name
    aiven_flink_application Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Flink Application resource allows the creation and management of Aiven Flink Applications.
        name: aiven_flink_application Resource - terraform-provider-aiven
        title: aiven_flink_application Resource - terraform-provider-aiven
        argumentDocs:
            application_id: (String) Application ID
            create: (String)
            created_at: (String) Application creation time
            created_by: (String) Application creator
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            name: (String) Application name
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            updated_at: (String) Application update time
            updated_by: (String) Application updater
        importStatements:
            - terraform import aiven_flink_application.myapp project/service/application_name
    aiven_flink_application_deployment Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Flink Application Deployment resource allows the creation and management of Aiven Flink Application Deployments.
        name: aiven_flink_application_deployment Resource - terraform-provider-aiven
        title: aiven_flink_application_deployment Resource - terraform-provider-aiven
        argumentDocs:
            application_id: (String) Application ID
            create: (String)
            created_at: (String) Application deployment creation time
            created_by: (String) Application deployment creator
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            parallelism: (Number) Flink Job parallelism
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            restart_enabled: (Boolean) Specifies whether a Flink Job is restarted in case it fails
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            starting_savepoint: (String) Job savepoint
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            version_id: (String) ApplicationVersion ID
        importStatements: []
    aiven_flink_application_version Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Flink Application Version resource allows the creation and management of Aiven Flink Application Versions.
        name: aiven_flink_application_version Resource - terraform-provider-aiven
        title: aiven_flink_application_version Resource - terraform-provider-aiven
        argumentDocs:
            application_id: (String) Application ID
            application_version_id: (String) Application version ID
            create: (String)
            create_table: (String) The CREATE TABLE statement
            created_at: (String) Application version creation time
            created_by: (String) Application version creator
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            integration_id: (String) The integration ID
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            sink: (Block Set) Application sink (see below for nested schema)
            sinks: (Block Set, Deprecated) Application sinks (see below for nested schema)
            source: (Block Set) Application source (see below for nested schema)
            sources: (Block Set, Deprecated) Application sources (see below for nested schema)
            statement: (String) Job SQL statement
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            version: (Number) Application version number
        importStatements:
            - terraform import aiven_flink_application_version.v1 project/service/application_id/application_version_id
    aiven_gcp_privatelink Resource - terraform-provider-aiven:
        subCategory: ""
        description: The GCP Privatelink resource allows the creation and management of Aiven GCP Privatelink for a services.
        name: aiven_gcp_privatelink Resource - terraform-provider-aiven
        title: aiven_gcp_privatelink Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            default: (String)
            delete: (String)
            google_service_attachment: (String) Privatelink resource Google Service Attachment
            id: (String) The ID of this resource.
            message: (String) Printable result of the GCP Privatelink request
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            state: (String) Privatelink resource state
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements: []
    aiven_gcp_privatelink_connection_approval Resource - terraform-provider-aiven:
        subCategory: ""
        description: The GCP privatelink approve resource waits for an aiven privatelink connection on a service and approves it with associated endpoint IP
        name: aiven_gcp_privatelink_connection_approval Resource - terraform-provider-aiven
        title: aiven_gcp_privatelink_connection_approval Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            privatelink_connection_id: (String) Privatelink connection id
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            psc_connection_id: (String) Privatelink connection PSC connection id
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            state: (String) Privatelink connection state
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            user_ip_address: (String) Privatelink connection user IP address
        importStatements: []
    aiven_gcp_vpc_peering_connection Resource - terraform-provider-aiven:
        subCategory: ""
        description: The GCP VPC Peering Connection resource allows the creation and management of Aiven GCP VPC Peering Connections.
        name: aiven_gcp_vpc_peering_connection Resource - terraform-provider-aiven
        title: aiven_gcp_vpc_peering_connection Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            default: (String)
            delete: (String)
            gcp_project_id: (String) GCP project ID. This property cannot be changed, doing so forces recreation of the resource.
            id: (String) The ID of this resource.
            peer_vpc: (String) GCP VPC network name. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            self_link: (String) Computed GCP network peering link
            state: (String) State of the peering connection
            state_info: (Map of String) State-specific help or error information
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            vpc_id: (String) The VPC the peering connection belongs to. This property cannot be changed, doing so forces recreation of the resource.
        importStatements:
            - terraform import aiven_gcp_vpc_peering_connection.foo project_name/vpc_id/gcp_project_id/peer_vpc
    aiven_grafana Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Grafana resource allows the creation and management of Aiven Grafana services.
        name: aiven_grafana Resource - terraform-provider-aiven
        title: aiven_grafana Resource - terraform-provider-aiven
        argumentDocs:
            access_key: (String) S3 access key. Requires permissions to the S3 bucket for the s3:PutObject and s3:PutObjectAcl actions.
            additional_backup_regions: (List of String) Additional Cloud Regions for Backup Replication.
            additional_disk_space: (String) Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            alerting_enabled: (Boolean) Enable or disable Grafana alerting functionality.
            alerting_error_or_timeout: (String) Default error or timeout setting for new alerting rules.
            alerting_max_annotations_to_keep: (Number) Max number of alert annotations that Grafana stores. 0 (default) keeps all alert annotations.
            alerting_nodata_or_nullvalues: (String) Default value for 'no data or null values' for new alerting rules.
            allow_embedding: (Boolean) Allow embedding Grafana dashboards with iframe/frame/object/embed tags. Disabled by default to limit impact of clickjacking.
            allow_sign_up: (Boolean) Automatically sign-up users on successful sign-in.
            allowed_domains: (List of String) Allowed domains.
            allowed_groups: (List of String) Require users to belong to one of given groups.
            allowed_organizations: (List of String) Require user to be member of one of the listed organizations.
            api_url: (String) API URL.
            auth_azuread: '(Block List, Max: 1) Azure AD OAuth integration. (see below for nested schema)'
            auth_basic_enabled: (Boolean) Enable or disable basic authentication form, used by Grafana built-in login.
            auth_generic_oauth: '(Block List, Max: 1) Generic OAuth integration. (see below for nested schema)'
            auth_github: '(Block List, Max: 1) Github Auth integration. (see below for nested schema)'
            auth_gitlab: '(Block List, Max: 1) GitLab Auth integration. (see below for nested schema)'
            auth_google: '(Block List, Max: 1) Google Auth integration. (see below for nested schema)'
            auth_url: (String) Authorization URL.
            auto_login: (Boolean) Allow users to bypass the login screen and automatically log in.
            bucket_url: (String) Bucket URL for S3.
            client_id: (String) Client ID from provider.
            client_secret: (String) Client secret from provider.
            cloud_name: (String) Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (aws, azure, do google, upcloud, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like here for Google and here for AWS.
            component: (String)
            components: (List of Object) Service component information objects (see below for nested schema)
            cookie_samesite: '(String) Cookie SameSite attribute: ''strict'' prevents sending cookie for cross-site requests, effectively disabling direct linking from other sites to Grafana. ''lax'' is the default value.'
            create: (String)
            custom_domain: (String) Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
            dashboard_previews_enabled: (Boolean) This feature is new in Grafana 9 and is quite resource intensive. It may cause low-end plans to work more slowly while the dashboard previews are rendering.
            dashboards_min_refresh_interval: (String) Signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h.
            dashboards_versions_to_keep: (Number) Dashboard versions to keep per dashboard.
            dataproxy_send_user_header: (Boolean) Send 'X-Grafana-User' header to data source.
            dataproxy_timeout: (Number) Timeout for data proxy requests in seconds.
            date_formats: '(Block List, Max: 1) Grafana date format specifications. (see below for nested schema)'
            default: (String)
            default_timezone: (String) Default time zone for user preferences. Value 'browser' uses browser local time zone.
            delete: (String)
            description: (String) Description for IP filter list entry.
            disable_gravatar: (Boolean) Set to true to disable gravatar. Defaults to false (gravatar is enabled).
            disk_space: (String, Deprecated) Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            disk_space_cap: (String) The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
            disk_space_default: (String) The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for disk_space
            disk_space_step: (String) The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. disk_space needs to increment from disk_space_default by increments of this size.
            disk_space_used: (String) Disk space that service is currently using
            editors_can_admin: (Boolean) Editors can manage folders, teams and dashboards created by them.
            external_image_storage: '(Block List, Max: 1) External image store settings. (see below for nested schema)'
            from_address: (String) Address used for sending emails.
            from_name: (String) Name used in outgoing emails, defaults to Grafana.
            full_date: (String) Moment.js style format string for cases where full date is shown.
            google_analytics_ua_id: (String) Google Analytics ID.
            grafana: (List of Object) Grafana server provided values (see below for nested schema)
            grafana_user_config: '(Block List, Max: 1) Grafana user configurable settings (see below for nested schema)'
            host: (String) Server hostname or IP.
            id: (String) The ID of this resource.
            integration_type: (String) Type of the service integration. The only supported value at the moment is read_replica
            interval_day: (String) Moment.js style format string used when a time requiring day accuracy is shown.
            interval_hour: (String) Moment.js style format string used when a time requiring hour accuracy is shown.
            interval_minute: (String) Moment.js style format string used when a time requiring minute accuracy is shown.
            interval_month: (String) Moment.js style format string used when a time requiring month accuracy is shown.
            interval_second: (String) Moment.js style format string used when a time requiring second accuracy is shown.
            interval_year: (String) Moment.js style format string used when a time requiring year accuracy is shown.
            ip_filter: (List of String, Deprecated) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            ip_filter_object: '(Block List, Max: 1024) Allow incoming connections from CIDR address block, e.g. ''10.20.0.0/16''. (see below for nested schema)'
            ip_filter_string: (List of String) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            kafka_authentication_method: (String)
            key: (String) Service tag key
            maintenance_window_dow: (String) Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
            maintenance_window_time: (String) Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
            metrics_enabled: (Boolean) Enable Grafana /metrics endpoint.
            name: (String) Name of the OAuth integration.
            network: (String) CIDR address block.
            oauth_allow_insecure_email_lookup: (Boolean) Enforce user lookup based on email instead of the unique ID provided by the IdP.
            password: (String, Sensitive) Password for SMTP authentication.
            plan: (String) Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are hobbyist, startup-x, business-x and premium-x where x is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the Aiven pricing page.
            port: (Number) SMTP server port.
            private_access: '(Block List, Max: 1) Allow access to selected service ports from private networks. (see below for nested schema)'
            privatelink_access: '(Block List, Max: 1) Allow access to selected service components through Privatelink. (see below for nested schema)'
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            project_to_fork_from: (String) Name of another project to fork a service from. This has effect only when a new service is being created.
            project_vpc_id: (String) Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
            provider: (String) Provider type.
            public_access: '(Block List, Max: 1) Allow access to selected service ports from the public Internet. (see below for nested schema)'
            read: (String)
            recovery_basebackup_name: (String) Name of the basebackup to restore in forked service.
            route: (String)
            scopes: (List of String) OAuth scopes.
            secret_key: (String) S3 secret key.
            service_host: (String) The hostname of the service.
            service_integrations: (Block List) Service integrations to specify when creating a service. Not applied after initial service creation (see below for nested schema)
            service_name: (String) Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
            service_password: (String, Sensitive) Password used for connecting to the service, if applicable
            service_port: (Number) The port of the service
            service_to_fork_from: (String) Name of another service to fork from. This has effect only when a new service is being created.
            service_type: (String) Aiven internal service type code
            service_uri: (String, Sensitive) URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
            service_username: (String) Username used for connecting to the service, if applicable
            skip_verify: (Boolean) Skip verifying server certificate. Defaults to false.
            smtp_server: '(Block List, Max: 1) SMTP server settings. (see below for nested schema)'
            source_service_name: (String) Name of the source service
            ssl: (Boolean)
            starttls_policy: (String) Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS. Default is OpportunisticStartTLS.
            state: (String) Service state. One of POWEROFF, REBALANCING, REBUILDING or RUNNING
            static_ips: (Set of String) Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
            tag: (Block Set) Tags are key-value pairs that allow you to categorize services. (see below for nested schema)
            team_ids: (List of Number) Require users to belong to one of given team IDs.
            termination_protection: (Boolean) Prevents the service from being deleted. It is recommended to set this to true for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
            timeouts: (Block, Optional) (see below for nested schema)
            token_url: (String) Token URL.
            update: (String)
            usage: (String)
            user_auto_assign_org: (Boolean) Auto-assign new users on signup to main organization. Defaults to false.
            user_auto_assign_org_role: (String) Set role for new signups. Defaults to Viewer.
            username: (String) Username for SMTP authentication.
            value: (String) Service tag value
            viewers_can_edit: (Boolean) Users with view-only permission can edit but not save dashboards.
        importStatements:
            - terraform import aiven_grafana.gr1 project/service_name
    aiven_influxdb Resource - terraform-provider-aiven:
        subCategory: ""
        description: The InfluxDB resource allows the creation and management of Aiven InfluxDB services.
        name: aiven_influxdb Resource - terraform-provider-aiven
        title: aiven_influxdb Resource - terraform-provider-aiven
        argumentDocs:
            additional_backup_regions: (List of String) Additional Cloud Regions for Backup Replication.
            additional_disk_space: (String) Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            cloud_name: (String) Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (aws, azure, do google, upcloud, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like here for Google and here for AWS.
            component: (String)
            components: (List of Object) Service component information objects (see below for nested schema)
            create: (String)
            custom_domain: (String) Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
            database_name: (String)
            default: (String)
            delete: (String)
            description: (String) Description for IP filter list entry.
            disk_space: (String, Deprecated) Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            disk_space_cap: (String) The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
            disk_space_default: (String) The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for disk_space
            disk_space_step: (String) The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. disk_space needs to increment from disk_space_default by increments of this size.
            disk_space_used: (String) Disk space that service is currently using
            host: (String)
            id: (String) The ID of this resource.
            influxdb: (List of Object) InfluxDB server provided values (see below for nested schema)
            influxdb_user_config: '(Block List, Max: 1) Influxdb user configurable settings (see below for nested schema)'
            integration_type: (String) Type of the service integration. The only supported value at the moment is read_replica
            ip_filter: (List of String, Deprecated) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            ip_filter_object: '(Block List, Max: 1024) Allow incoming connections from CIDR address block, e.g. ''10.20.0.0/16''. (see below for nested schema)'
            ip_filter_string: (List of String) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            kafka_authentication_method: (String)
            key: (String) Service tag key
            log_queries_after: (Number) The maximum duration in seconds before a query is logged as a slow query. Setting this to 0 (the default) will never log slow queries.
            maintenance_window_dow: (String) Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
            maintenance_window_time: (String) Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
            max_connection_limit: (Number) Maximum number of connections to InfluxDB. Setting this to 0 (default) means no limit. If using max_connection_limit, it is recommended to set the value to be large enough in order to not block clients unnecessarily.
            max_row_limit: (Number) The maximum number of rows returned in a non-chunked query. Setting this to 0 (the default) allows an unlimited number to be returned.
            max_select_buckets: (Number) The maximum number of GROUP BY time() buckets that can be processed in a query. Setting this to 0 (the default) allows an unlimited number to be processed.
            max_select_point: (Number) The maximum number of points that can be processed in a SELECT statement. Setting this to 0 (the default) allows an unlimited number to be processed.
            network: (String) CIDR address block.
            plan: (String) Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are hobbyist, startup-x, business-x and premium-x where x is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the Aiven pricing page.
            port: (Number)
            private_access: '(Block List, Max: 1) Allow access to selected service ports from private networks. (see below for nested schema)'
            privatelink_access: '(Block List, Max: 1) Allow access to selected service components through Privatelink. (see below for nested schema)'
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            project_to_fork_from: (String) Name of another project to fork a service from. This has effect only when a new service is being created.
            project_vpc_id: (String) Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
            public_access: '(Block List, Max: 1) Allow access to selected service ports from the public Internet. (see below for nested schema)'
            query_log_enabled: (Boolean) Whether queries should be logged before execution. May log sensitive data contained within a query.
            query_timeout: (Number) The maximum duration in seconds before a query is killed. Setting this to 0 (the default) will never kill slow queries.
            read: (String)
            recovery_basebackup_name: (String) Name of the basebackup to restore in forked service.
            route: (String)
            service_host: (String) The hostname of the service.
            service_integrations: (Block List) Service integrations to specify when creating a service. Not applied after initial service creation (see below for nested schema)
            service_name: (String) Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
            service_password: (String, Sensitive) Password used for connecting to the service, if applicable
            service_port: (Number) The port of the service
            service_to_fork_from: (String) Name of another service to fork from. This has effect only when a new service is being created.
            service_type: (String) Aiven internal service type code
            service_uri: (String, Sensitive) URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
            service_username: (String) Username used for connecting to the service, if applicable
            source_service_name: (String) Name of the source service
            ssl: (Boolean)
            state: (String) Service state. One of POWEROFF, REBALANCING, REBUILDING or RUNNING
            static_ips: (Set of String) Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
            tag: (Block Set) Tags are key-value pairs that allow you to categorize services. (see below for nested schema)
            termination_protection: (Boolean) Prevents the service from being deleted. It is recommended to set this to true for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            usage: (String)
            value: (String) Service tag value
        importStatements:
            - terraform import aiven_influxdb.inf1 project/service_name
    aiven_influxdb_database Resource - terraform-provider-aiven:
        subCategory: ""
        description: The InfluxDB Database resource allows the creation and management of Aiven InfluxDB Databases.
        name: aiven_influxdb_database Resource - terraform-provider-aiven
        title: aiven_influxdb_database Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            database_name: (String) The name of the service database. This property cannot be changed, doing so forces recreation of the resource.
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            termination_protection: (Boolean) It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is recommended to enable this for any production databases containing critical data. The default value is false.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements: []
    aiven_influxdb_user Resource - terraform-provider-aiven:
        subCategory: ""
        description: The InfluxDB User resource allows the creation and management of Aiven InfluxDB Users.
        name: aiven_influxdb_user Resource - terraform-provider-aiven
        title: aiven_influxdb_user Resource - terraform-provider-aiven
        argumentDocs:
            access_cert: (String, Sensitive) Access certificate for the user if applicable for the service in question
            access_key: (String, Sensitive) Access certificate key for the user if applicable for the service in question
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            password: (String, Sensitive) The password of the InfluxDB User.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of the user account. Tells whether the user is the primary account or a regular account.
            update: (String)
            username: (String) The actual name of the InfluxDB User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        importStatements:
            - terraform import aiven_influxdb_user.foo project/service_name/username
    aiven_kafka Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Kafka resource allows the creation and management of Aiven Kafka services.
        name: aiven_kafka Resource - terraform-provider-aiven
        title: aiven_kafka Resource - terraform-provider-aiven
        argumentDocs:
            access_cert: (String)
            access_key: (String)
            additional_backup_regions: (List of String) Additional Cloud Regions for Backup Replication.
            additional_disk_space: (String) Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            auto_create_topics_enable: (Boolean) Enable auto creation of topics.
            certificate: (Boolean) Enable certificate/SSL authentication. The default value is true.
            cloud_name: (String) Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (aws, azure, do google, upcloud, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like here for Google and here for AWS.
            component: (String)
            components: (List of Object) Service component information objects (see below for nested schema)
            compression_type: (String) Specify the final compression type for a given topic. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'uncompressed' which is equivalent to no compression; and 'producer' which means retain the original compression codec set by the producer.
            connect_uri: (String)
            connections_max_idle_ms: '(Number) Idle connections timeout: the server socket processor threads close the connections that idle for longer than this.'
            connector_client_config_override_policy: (String) Defines what client configurations can be overridden by the connector. Default is None.
            consumer_auto_offset_reset: (String) What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server. Default is earliest.
            consumer_enable_auto_commit: (Boolean) If true the consumer's offset will be periodically committed to Kafka in the background. The default value is true.
            consumer_fetch_max_bytes: (Number) Records are fetched in batches by the consumer, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that the consumer can make progress. As such, this is not a absolute maximum.
            consumer_isolation_level: (String) Transaction read isolation level. read_uncommitted is the default, but read_committed can be used if consume-exactly-once behavior is desired.
            consumer_max_partition_fetch_bytes: (Number) Records are fetched in batches by the consumer.If the first record batch in the first non-empty partition of the fetch is larger than this limit, the batch will still be returned to ensure that the consumer can make progress. .
            consumer_max_poll_interval_ms: (Number) The maximum delay in milliseconds between invocations of poll() when using consumer group management (defaults to 300000).
            consumer_max_poll_records: (Number) The maximum number of records returned in a single call to poll() (defaults to 500).
            consumer_request_max_bytes: (Number) Maximum number of bytes in unencoded message keys and values by a single request. The default value is 67108864.
            consumer_request_timeout_ms: (Number) The maximum total time to wait for messages for a request if the maximum number of messages has not yet been reached. The default value is 1000.
            create: (String)
            custom_domain: (String) Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
            default: (String)
            default_acl: (Boolean) Create default wildcard Kafka ACL
            default_replication_factor: (Number) Replication factor for autocreated topics.
            delete: (String)
            description: (String) Description for IP filter list entry.
            disk_space: (String, Deprecated) Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            disk_space_cap: (String) The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
            disk_space_default: (String) The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for disk_space
            disk_space_step: (String) The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. disk_space needs to increment from disk_space_default by increments of this size.
            disk_space_used: (String) Disk space that service is currently using
            group_initial_rebalance_delay_ms: (Number) The amount of time, in milliseconds, the group coordinator will wait for more consumers to join a new group before performing the first rebalance. A longer delay means potentially fewer rebalances, but increases the time until processing begins. The default value for this is 3 seconds. During development and testing it might be desirable to set this to 0 in order to not delay test execution time.
            group_max_session_timeout_ms: (Number) The maximum allowed session timeout for registered consumers. Longer timeouts give consumers more time to process messages in between heartbeats at the cost of a longer time to detect failures.
            group_min_session_timeout_ms: (Number) The minimum allowed session timeout for registered consumers. Longer timeouts give consumers more time to process messages in between heartbeats at the cost of a longer time to detect failures.
            host: (String)
            id: (String) The ID of this resource.
            integration_type: (String) Type of the service integration. The only supported value at the moment is read_replica
            ip_filter: (List of String, Deprecated) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            ip_filter_object: '(Block List, Max: 1024) Allow incoming connections from CIDR address block, e.g. ''10.20.0.0/16''. (see below for nested schema)'
            ip_filter_string: (List of String) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            jolokia: (Boolean) Enable jolokia.
            kafka: (List of Object) Kafka server provided values (see below for nested schema)
            kafka_authentication_method: (String)
            kafka_authentication_methods: '(Block List, Max: 1) Kafka authentication methods. (see below for nested schema)'
            kafka_connect: (Boolean) Enable Kafka Connect service. The default value is false.
            kafka_connect_config: '(Block List, Max: 1) Kafka Connect configuration values. (see below for nested schema)'
            kafka_rest: (Boolean) Enable Kafka-REST service. The default value is false.
            kafka_rest_authorization: (Boolean) Enable authorization in Kafka-REST service.
            kafka_rest_config: '(Block List, Max: 1) Kafka REST configuration. (see below for nested schema)'
            kafka_user_config: '(Block List, Max: 1) Kafka user configurable settings (see below for nested schema)'
            kafka_version: (String) Kafka major version.
            karapace: (Boolean, Deprecated) Switch the service to use Karapace for schema registry and REST proxy
            key: (String) Service tag key
            leader_eligibility: (Boolean) If true, Karapace / Schema Registry on the service nodes can participate in leader election. It might be needed to disable this when the schemas topic is replicated to a secondary cluster and Karapace / Schema Registry there must not participate in leader election. Defaults to true.
            log_cleaner_delete_retention_ms: (Number) How long are delete records retained?.
            log_cleaner_max_compaction_lag_ms: (Number) The maximum amount of time message will remain uncompacted. Only applicable for logs that are being compacted.
            log_cleaner_min_cleanable_ratio: (Number) Controls log compactor frequency. Larger value means more frequent compactions but also more space wasted for logs. Consider setting log.cleaner.max.compaction.lag.ms to enforce compactions sooner, instead of setting a very high value for this option.
            log_cleaner_min_compaction_lag_ms: (Number) The minimum time a message will remain uncompacted in the log. Only applicable for logs that are being compacted.
            log_cleanup_policy: (String) The default cleanup policy for segments beyond the retention window.
            log_flush_interval_messages: (Number) The number of messages accumulated on a log partition before messages are flushed to disk.
            log_flush_interval_ms: (Number) The maximum time in ms that a message in any topic is kept in memory before flushed to disk. If not set, the value in log.flush.scheduler.interval.ms is used.
            log_index_interval_bytes: (Number) The interval with which Kafka adds an entry to the offset index.
            log_index_size_max_bytes: (Number) The maximum size in bytes of the offset index.
            log_message_downconversion_enable: (Boolean) This configuration controls whether down-conversion of message formats is enabled to satisfy consume requests. .
            log_message_timestamp_difference_max_ms: (Number) The maximum difference allowed between the timestamp when a broker receives a message and the timestamp specified in the message.
            log_message_timestamp_type: (String) Define whether the timestamp in the message is message create time or log append time.
            log_preallocate: (Boolean) Should pre allocate file when create new segment?.
            log_retention_bytes: (Number) The maximum size of the log before deleting messages.
            log_retention_hours: (Number) The number of hours to keep a log file before deleting it.
            log_retention_ms: (Number) The number of milliseconds to keep a log file before deleting it (in milliseconds), If not set, the value in log.retention.minutes is used. If set to -1, no time limit is applied.
            log_roll_jitter_ms: (Number) The maximum jitter to subtract from logRollTimeMillis (in milliseconds). If not set, the value in log.roll.jitter.hours is used.
            log_roll_ms: (Number) The maximum time before a new log segment is rolled out (in milliseconds).
            log_segment_bytes: (Number) The maximum size of a single log file.
            log_segment_delete_delay_ms: (Number) The amount of time to wait before deleting a file from the filesystem.
            maintenance_window_dow: (String) Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
            maintenance_window_time: (String) Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
            max_connections_per_ip: (Number) The maximum number of connections allowed from each ip address (defaults to 2147483647).
            max_incremental_fetch_session_cache_slots: (Number) The maximum number of incremental fetch sessions that the broker will maintain.
            message_max_bytes: (Number) The maximum size of message that the server can receive.
            min_insync_replicas: (Number) When a producer sets acks to 'all' (or '-1'), min.insync.replicas specifies the minimum number of replicas that must acknowledge a write for the write to be considered successful.
            network: (String) CIDR address block.
            num_partitions: (Number) Number of partitions for autocreated topics.
            offset_flush_interval_ms: (Number) The interval at which to try committing offsets for tasks (defaults to 60000).
            offset_flush_timeout_ms: (Number) Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt (defaults to 5000).
            offsets_retention_minutes: (Number) Log retention window in minutes for offsets topic.
            plan: (String) Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are hobbyist, startup-x, business-x and premium-x where x is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the Aiven pricing page.
            port: (Number)
            private_access: '(Block List, Max: 1) Allow access to selected service ports from private networks. (see below for nested schema)'
            privatelink_access: '(Block List, Max: 1) Allow access to selected service components through Privatelink. (see below for nested schema)'
            producer_acks: (String) The number of acknowledgments the producer requires the leader to have received before considering a request complete. If set to 'all' or '-1', the leader will wait for the full set of in-sync replicas to acknowledge the record. The default value is 1.
            producer_batch_size: (Number) This setting gives the upper bound of the batch size to be sent. If there are fewer than this many bytes accumulated for this partition, the producer will 'linger' for the linger.ms time waiting for more records to show up. A batch size of zero will disable batching entirely (defaults to 16384).
            producer_buffer_memory: (Number) The total bytes of memory the producer can use to buffer records waiting to be sent to the broker (defaults to 33554432).
            producer_compression_type: (String) Specify the default compression type for producers. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'none' which is the default and equivalent to no compression.
            producer_linger_ms: '(Number) This setting gives the upper bound on the delay for batching: once there is batch.size worth of records for a partition it will be sent immediately regardless of this setting, however if there are fewer than this many bytes accumulated for this partition the producer will ''linger'' for the specified time waiting for more records to show up. Defaults to 0.'
            producer_max_request_size: (Number) This setting will limit the number of record batches the producer will send in a single request to avoid sending huge requests.
            producer_purgatory_purge_interval_requests: (Number) The purge interval (in number of requests) of the producer request purgatory(defaults to 1000).
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            project_vpc_id: (String) Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
            prometheus: (Boolean) Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
            public_access: '(Block List, Max: 1) Allow access to selected service ports from the public Internet. (see below for nested schema)'
            read: (String)
            replica_fetch_max_bytes: (Number) The number of bytes of messages to attempt to fetch for each partition (defaults to 1048576). This is not an absolute maximum, if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that progress can be made.
            replica_fetch_response_max_bytes: (Number) Maximum bytes expected for the entire fetch response (defaults to 10485760). Records are fetched in batches, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that progress can be made. As such, this is not an absolute maximum.
            rest_uri: (String)
            route: (String)
            sasl: (Boolean) Enable SASL authentication. The default value is false.
            scheduled_rebalance_max_delay_ms: (Number) The maximum delay that is scheduled in order to wait for the return of one or more departed workers before rebalancing and reassigning their connectors and tasks to the group. During this period the connectors and tasks of the departed workers remain unassigned.  Defaults to 5 minutes.
            schema_registry: (Boolean) Enable Schema-Registry service. The default value is false.
            schema_registry_config: '(Block List, Max: 1) Schema Registry configuration. (see below for nested schema)'
            schema_registry_uri: (String)
            service_host: (String) The hostname of the service.
            service_integrations: (Block List) Service integrations to specify when creating a service. Not applied after initial service creation (see below for nested schema)
            service_name: (String) Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
            service_password: (String, Sensitive) Password used for connecting to the service, if applicable
            service_port: (Number) The port of the service
            service_type: (String) Aiven internal service type code
            service_uri: (String, Sensitive) URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
            service_username: (String) Username used for connecting to the service, if applicable
            session_timeout_ms: (Number) The timeout in milliseconds used to detect failures when using Kafka’s group management facilities (defaults to 10000).
            simpleconsumer_pool_size_max: (Number) Maximum number of SimpleConsumers that can be instantiated per broker. The default value is 25.
            socket_request_max_bytes: (Number) The maximum number of bytes in a socket request (defaults to 104857600).
            source_service_name: (String) Name of the source service
            ssl: (Boolean)
            state: (String) Service state. One of POWEROFF, REBALANCING, REBUILDING or RUNNING
            static_ips: (Set of String) Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
            tag: (Block Set) Tags are key-value pairs that allow you to categorize services. (see below for nested schema)
            termination_protection: (Boolean) Prevents the service from being deleted. It is recommended to set this to true for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
            timeouts: (Block, Optional) (see below for nested schema)
            topic_name: (String) The durable single partition topic that acts as the durable log for the data. This topic must be compacted to avoid losing data due to retention policy. Please note that changing this configuration in an existing Schema Registry / Karapace setup leads to previous schemas being inaccessible, data encoded with them potentially unreadable and schema ID sequence put out of order. It's only possible to do the switch while Schema Registry / Karapace is disabled. Defaults to _schemas.
            transaction_remove_expired_transaction_cleanup_interval_ms: (Number) The interval at which to remove transactions that have expired due to transactional.id.expiration.ms passing (defaults to 3600000 (1 hour)).
            transaction_state_log_segment_bytes: (Number) The transaction topic segment bytes should be kept relatively small in order to facilitate faster log compaction and cache loads (defaults to 104857600 (100 mebibytes)).
            update: (String)
            usage: (String)
            value: (String) Service tag value
        importStatements:
            - terraform import aiven_kafka.kafka1 project/service_name
    aiven_kafka_acl Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Resource Kafka ACL resource allows the creation and management of ACLs for an Aiven Kafka service.
        name: aiven_kafka_acl Resource - terraform-provider-aiven
        title: aiven_kafka_acl Resource - terraform-provider-aiven
        argumentDocs:
            acl_id: (String) Kafka ACL ID
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            permission: (String) Kafka permission to grant. The possible values are admin, read, readwrite and write. This property cannot be changed, doing so forces recreation of the resource.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            topic: (String) Topic name pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.
            update: (String)
            username: (String) Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.
        importStatements:
            - terraform import aiven_kafka_acl.mytestacl project/service_name/id
    aiven_kafka_connect Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Kafka Connect resource allows the creation and management of Aiven Kafka Connect services.
        name: aiven_kafka_connect Resource - terraform-provider-aiven
        title: aiven_kafka_connect Resource - terraform-provider-aiven
        argumentDocs:
            additional_backup_regions: (List of String) Additional Cloud Regions for Backup Replication.
            additional_disk_space: (String) Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            cloud_name: (String) Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (aws, azure, do google, upcloud, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like here for Google and here for AWS.
            component: (String)
            components: (List of Object) Service component information objects (see below for nested schema)
            connector_client_config_override_policy: (String) Defines what client configurations can be overridden by the connector. Default is None.
            consumer_auto_offset_reset: (String) What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server. Default is earliest.
            consumer_fetch_max_bytes: (Number) Records are fetched in batches by the consumer, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that the consumer can make progress. As such, this is not a absolute maximum.
            consumer_isolation_level: (String) Transaction read isolation level. read_uncommitted is the default, but read_committed can be used if consume-exactly-once behavior is desired.
            consumer_max_partition_fetch_bytes: (Number) Records are fetched in batches by the consumer.If the first record batch in the first non-empty partition of the fetch is larger than this limit, the batch will still be returned to ensure that the consumer can make progress. .
            consumer_max_poll_interval_ms: (Number) The maximum delay in milliseconds between invocations of poll() when using consumer group management (defaults to 300000).
            consumer_max_poll_records: (Number) The maximum number of records returned in a single call to poll() (defaults to 500).
            create: (String)
            default: (String)
            delete: (String)
            description: (String) Description for IP filter list entry.
            disk_space: (String, Deprecated) Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            disk_space_cap: (String) The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
            disk_space_default: (String) The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for disk_space
            disk_space_step: (String) The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. disk_space needs to increment from disk_space_default by increments of this size.
            disk_space_used: (String) Disk space that service is currently using
            host: (String)
            id: (String) The ID of this resource.
            integration_type: (String) Type of the service integration. The only supported value at the moment is read_replica
            ip_filter: (List of String, Deprecated) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            ip_filter_object: '(Block List, Max: 1024) Allow incoming connections from CIDR address block, e.g. ''10.20.0.0/16''. (see below for nested schema)'
            ip_filter_string: (List of String) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            jolokia: (Boolean) Enable jolokia.
            kafka_authentication_method: (String)
            kafka_connect: (List of Object) Kafka Connect server provided values (see below for nested schema)
            kafka_connect_user_config: '(Block List, Max: 1) KafkaConnect user configurable settings (see below for nested schema)'
            key: (String) Service tag key
            maintenance_window_dow: (String) Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
            maintenance_window_time: (String) Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
            network: (String) CIDR address block.
            offset_flush_interval_ms: (Number) The interval at which to try committing offsets for tasks (defaults to 60000).
            offset_flush_timeout_ms: (Number) Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt (defaults to 5000).
            plan: (String) Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are hobbyist, startup-x, business-x and premium-x where x is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the Aiven pricing page.
            port: (Number)
            private_access: '(Block List, Max: 1) Allow access to selected service ports from private networks. (see below for nested schema)'
            privatelink_access: '(Block List, Max: 1) Allow access to selected service components through Privatelink. (see below for nested schema)'
            producer_batch_size: (Number) This setting gives the upper bound of the batch size to be sent. If there are fewer than this many bytes accumulated for this partition, the producer will 'linger' for the linger.ms time waiting for more records to show up. A batch size of zero will disable batching entirely (defaults to 16384).
            producer_buffer_memory: (Number) The total bytes of memory the producer can use to buffer records waiting to be sent to the broker (defaults to 33554432).
            producer_compression_type: (String) Specify the default compression type for producers. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'none' which is the default and equivalent to no compression.
            producer_linger_ms: '(Number) This setting gives the upper bound on the delay for batching: once there is batch.size worth of records for a partition it will be sent immediately regardless of this setting, however if there are fewer than this many bytes accumulated for this partition the producer will ''linger'' for the specified time waiting for more records to show up. Defaults to 0.'
            producer_max_request_size: (Number) This setting will limit the number of record batches the producer will send in a single request to avoid sending huge requests.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            project_vpc_id: (String) Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
            prometheus: (Boolean) Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
            public_access: '(Block List, Max: 1) Allow access to selected service ports from the public Internet. (see below for nested schema)'
            read: (String)
            route: (String)
            scheduled_rebalance_max_delay_ms: (Number) The maximum delay that is scheduled in order to wait for the return of one or more departed workers before rebalancing and reassigning their connectors and tasks to the group. During this period the connectors and tasks of the departed workers remain unassigned.  Defaults to 5 minutes.
            service_host: (String) The hostname of the service.
            service_integrations: (Block List) Service integrations to specify when creating a service. Not applied after initial service creation (see below for nested schema)
            service_name: (String) Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
            service_password: (String, Sensitive) Password used for connecting to the service, if applicable
            service_port: (Number) The port of the service
            service_type: (String) Aiven internal service type code
            service_uri: (String, Sensitive) URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
            service_username: (String) Username used for connecting to the service, if applicable
            session_timeout_ms: (Number) The timeout in milliseconds used to detect failures when using Kafka’s group management facilities (defaults to 10000).
            source_service_name: (String) Name of the source service
            ssl: (Boolean)
            state: (String) Service state. One of POWEROFF, REBALANCING, REBUILDING or RUNNING
            static_ips: (Set of String) Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
            tag: (Block Set) Tags are key-value pairs that allow you to categorize services. (see below for nested schema)
            termination_protection: (Boolean) Prevents the service from being deleted. It is recommended to set this to true for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            usage: (String)
            value: (String) Service tag value
        importStatements:
            - terraform import aiven_kafka_connect.kc1 project/service_name
    aiven_kafka_connector Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Kafka connectors resource allows the creation and management of Aiven Kafka connectors.
        name: aiven_kafka_connector Resource - terraform-provider-aiven
        title: aiven_kafka_connector Resource - terraform-provider-aiven
        argumentDocs:
            config: (Map of String) The Kafka Connector configuration parameters.
            connector: (String)
            connector_name: (String) The kafka connector name. This property cannot be changed, doing so forces recreation of the resource.
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            plugin_author: (String) The Kafka connector author.
            plugin_class: (String) The Kafka connector Java class.
            plugin_doc_url: (String) The Kafka connector documentation URL.
            plugin_title: (String) The Kafka connector title.
            plugin_type: (String) The Kafka connector type.
            plugin_version: (String) The version of the kafka connector.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            task: (Set of Object) List of tasks of a connector. (see below for nested schema)
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - terraform import aiven_kafka_connector.kafka-os-con1 project/service_name/connector_name
    aiven_kafka_mirrormaker Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Kafka MirrorMaker resource allows the creation and management of Aiven Kafka MirrorMaker 2 services.
        name: aiven_kafka_mirrormaker Resource - terraform-provider-aiven
        title: aiven_kafka_mirrormaker Resource - terraform-provider-aiven
        argumentDocs:
            additional_backup_regions: (List of String) Additional Cloud Regions for Backup Replication.
            additional_disk_space: (String) Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            cloud_name: (String) Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (aws, azure, do google, upcloud, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like here for Google and here for AWS.
            component: (String)
            components: (List of Object) Service component information objects (see below for nested schema)
            create: (String)
            default: (String)
            delete: (String)
            description: (String) Description for IP filter list entry.
            disk_space: (String, Deprecated) Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            disk_space_cap: (String) The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
            disk_space_default: (String) The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for disk_space
            disk_space_step: (String) The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. disk_space needs to increment from disk_space_default by increments of this size.
            disk_space_used: (String) Disk space that service is currently using
            emit_checkpoints_enabled: '(Boolean) Whether to emit consumer group offset checkpoints to target cluster periodically (default: true).'
            emit_checkpoints_interval_seconds: '(Number) Frequency at which consumer group offset checkpoints are emitted (default: 60, every minute).'
            host: (String)
            id: (String) The ID of this resource.
            integration_type: (String) Type of the service integration. The only supported value at the moment is read_replica
            ip_filter: (List of String, Deprecated) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            ip_filter_object: '(Block List, Max: 1024) Allow incoming connections from CIDR address block, e.g. ''10.20.0.0/16''. (see below for nested schema)'
            ip_filter_string: (List of String) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            kafka_authentication_method: (String)
            kafka_mirrormaker: (List of Object) Kafka MirrorMaker 2 server provided values (see below for nested schema)
            kafka_mirrormaker_user_config: '(Block List, Max: 1) KafkaMirrormaker user configurable settings (see below for nested schema)'
            key: (String) Service tag key
            maintenance_window_dow: (String) Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
            maintenance_window_time: (String) Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
            network: (String) CIDR address block.
            plan: (String) Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are hobbyist, startup-x, business-x and premium-x where x is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the Aiven pricing page.
            port: (Number)
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            project_vpc_id: (String) Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
            read: (String)
            refresh_groups_enabled: (Boolean) Whether to periodically check for new consumer groups. Defaults to 'true'.
            refresh_groups_interval_seconds: (Number) Frequency of consumer group refresh in seconds. Defaults to 600 seconds (10 minutes).
            refresh_topics_enabled: (Boolean) Whether to periodically check for new topics and partitions. Defaults to 'true'.
            refresh_topics_interval_seconds: (Number) Frequency of topic and partitions refresh in seconds. Defaults to 600 seconds (10 minutes).
            route: (String)
            service_host: (String) The hostname of the service.
            service_integrations: (Block List) Service integrations to specify when creating a service. Not applied after initial service creation (see below for nested schema)
            service_name: (String) Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
            service_password: (String, Sensitive) Password used for connecting to the service, if applicable
            service_port: (Number) The port of the service
            service_type: (String) Aiven internal service type code
            service_uri: (String, Sensitive) URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
            service_username: (String) Username used for connecting to the service, if applicable
            source_service_name: (String) Name of the source service
            ssl: (Boolean)
            state: (String) Service state. One of POWEROFF, REBALANCING, REBUILDING or RUNNING
            static_ips: (Set of String) Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
            sync_group_offsets_enabled: (Boolean) Whether to periodically write the translated offsets of replicated consumer groups (in the source cluster) to __consumer_offsets topic in target cluster, as long as no active consumers in that group are connected to the target cluster.
            sync_group_offsets_interval_seconds: '(Number) Frequency at which consumer group offsets are synced (default: 60, every minute).'
            sync_topic_configs_enabled: (Boolean) Whether to periodically configure remote topics to match their corresponding upstream topics.
            tag: (Block Set) Tags are key-value pairs that allow you to categorize services. (see below for nested schema)
            tasks_max_per_cpu: (Number) 'tasks.max' is set to this multiplied by the number of CPUs in the service. The default value is 1.
            termination_protection: (Boolean) Prevents the service from being deleted. It is recommended to set this to true for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            usage: (String)
            value: (String) Service tag value
        importStatements:
            - terraform import aiven_kafka_mirrormaker.mm1 project/service_name
    aiven_kafka_schema Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Kafka Schema resource allows the creation and management of Aiven Kafka Schemas.
        name: aiven_kafka_schema Resource - terraform-provider-aiven
        title: aiven_kafka_schema Resource - terraform-provider-aiven
        argumentDocs:
            compatibility_level: (String) Kafka Schemas compatibility level. The possible values are BACKWARD, BACKWARD_TRANSITIVE, FORWARD, FORWARD_TRANSITIVE, FULL, FULL_TRANSITIVE and NONE.
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            schema: (String) Kafka Schema configuration. Should be a valid Avro, JSON, or Protobuf schema, depending on the schema type.
            schema_type: (String) Kafka Schema configuration type. Defaults to AVRO. Possible values are AVRO, JSON, and PROTOBUF.
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            subject_name: (String) The Kafka Schema Subject name. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            version: (Number) Kafka Schema configuration version.
        importStatements:
            - terraform import aiven_kafka_schema.kafka-schema1 project/service_name/subject_name
    aiven_kafka_schema_configuration Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Kafka Schema Configuration resource allows the creation and management of Aiven Kafka Schema Configurations.
        name: aiven_kafka_schema_configuration Resource - terraform-provider-aiven
        title: aiven_kafka_schema_configuration Resource - terraform-provider-aiven
        argumentDocs:
            compatibility_level: (String) Kafka Schemas compatibility level. The possible values are BACKWARD, BACKWARD_TRANSITIVE, FORWARD, FORWARD_TRANSITIVE, FULL, FULL_TRANSITIVE and NONE.
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - terraform import aiven_kafka_schema_configuration.config project/service_name
    aiven_kafka_schema_registry_acl Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Resource Kafka Schema Registry ACL resource allows the creation and management of Schema Registry ACLs for an Aiven Kafka service.
        name: aiven_kafka_schema_registry_acl Resource - terraform-provider-aiven
        title: aiven_kafka_schema_registry_acl Resource - terraform-provider-aiven
        argumentDocs:
            acl_id: (String) Kafka Schema Registry ACL ID
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            permission: (String) Kafka Schema Registry permission to grant. The possible values are schema_registry_read and schema_registry_write. This property cannot be changed, doing so forces recreation of the resource.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            resource: (String) Resource name pattern for the Schema Registry ACL entry. This property cannot be changed, doing so forces recreation of the resource.
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            username: (String) Username pattern for the ACL entry. This property cannot be changed, doing so forces recreation of the resource.
        importStatements: []
    aiven_kafka_topic Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Kafka Topic resource allows the creation and management of Aiven Kafka Topics.
        name: aiven_kafka_topic Resource - terraform-provider-aiven
        title: aiven_kafka_topic Resource - terraform-provider-aiven
        argumentDocs:
            cleanup_policy: (String) cleanup.policy value
            compression_type: (String) compression.type value
            config: '(Block List, Max: 1) Kafka topic configuration (see below for nested schema)'
            create: (String)
            default: (String)
            delete: (String)
            delete_retention_ms: (String) delete.retention.ms value
            file_delete_delay_ms: (String) file.delete.delay.ms value
            flush_messages: (String) flush.messages value
            flush_ms: (String) flush.ms value
            id: (String) The ID of this resource.
            index_interval_bytes: (String) index.interval.bytes value
            key: '(String) Topic tag key. Maximum length: 64.'
            max_compaction_lag_ms: (String) max.compaction.lag.ms value
            max_message_bytes: (String) max.message.bytes value
            message_downconversion_enable: (Boolean) message.downconversion.enable value
            message_format_version: (String) message.format.version value
            message_timestamp_difference_max_ms: (String) message.timestamp.difference.max.ms value
            message_timestamp_type: (String) message.timestamp.type value
            min_cleanable_dirty_ratio: (Number) min.cleanable.dirty.ratio value
            min_compaction_lag_ms: (String) min.compaction.lag.ms value
            min_insync_replicas: (String) min.insync.replicas value
            partitions: (Number) The number of partitions to create in the topic.
            preallocate: (Boolean) preallocate value
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            replication: (Number) The replication factor for the topic.
            retention_bytes: (String) retention.bytes value
            retention_ms: (String) retention.ms value
            segment_bytes: (String) segment.bytes value
            segment_index_bytes: (String) segment.index.bytes value
            segment_jitter_ms: (String) segment.jitter.ms value
            segment_ms: (String) segment.ms value
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            tag: (Block Set) Kafka Topic tag. (see below for nested schema)
            termination_protection: (Boolean) It is a Terraform client-side deletion protection, which prevents a Kafka topic from being deleted. It is recommended to enable this for any production Kafka topic containing critical data.
            timeouts: (Block, Optional) (see below for nested schema)
            topic_name: (String) The name of the topic. This property cannot be changed, doing so forces recreation of the resource.
            unclean_leader_election_enable: (Boolean, Deprecated) unclean.leader.election.enable value; This field is deprecated and no longer functional.
            update: (String)
            value: '(String) Topic tag value. Maximum length: 256.'
        importStatements:
            - terraform import aiven_kafka_topic.mytesttopic project/service_name/topic_name
    aiven_kafka_user Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Kafka User resource allows the creation and management of Aiven Kafka Users.
        name: aiven_kafka_user Resource - terraform-provider-aiven
        title: aiven_kafka_user Resource - terraform-provider-aiven
        argumentDocs:
            access_cert: (String, Sensitive) Access certificate for the user
            access_key: (String, Sensitive) Access certificate key for the user
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            password: (String, Sensitive) The password of the Kafka User.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of the user account. Tells whether the user is the primary account or a regular account.
            update: (String)
            username: (String) The actual name of the Kafka User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        importStatements:
            - terraform import aiven_kafka_user.foo project/service_name/username
    aiven_m3aggregator Resource - terraform-provider-aiven:
        subCategory: ""
        description: The M3 Aggregator resource allows the creation and management of Aiven M3 Aggregator services.
        name: aiven_m3aggregator Resource - terraform-provider-aiven
        title: aiven_m3aggregator Resource - terraform-provider-aiven
        argumentDocs:
            additional_disk_space: (String) Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            cloud_name: (String) Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (aws, azure, do google, upcloud, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like here for Google and here for AWS.
            component: (String)
            components: (List of Object) Service component information objects (see below for nested schema)
            create: (String)
            custom_domain: (String) Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
            default: (String)
            delete: (String)
            description: (String) Description for IP filter list entry.
            disk_space: (String, Deprecated) Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            disk_space_cap: (String) The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
            disk_space_default: (String) The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for disk_space
            disk_space_step: (String) The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. disk_space needs to increment from disk_space_default by increments of this size.
            disk_space_used: (String) Disk space that service is currently using
            host: (String)
            id: (String) The ID of this resource.
            integration_type: (String) Type of the service integration. The only supported value at the moment is read_replica
            ip_filter: (List of String, Deprecated) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            ip_filter_object: '(Block List, Max: 1024) Allow incoming connections from CIDR address block, e.g. ''10.20.0.0/16''. (see below for nested schema)'
            ip_filter_string: (List of String) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            kafka_authentication_method: (String)
            key: (String) Service tag key
            m3aggregator: (List of Object) M3 aggregator specific server provided values (see below for nested schema)
            m3aggregator_user_config: '(Block List, Max: 1) M3aggregator user configurable settings (see below for nested schema)'
            m3aggregator_version: (String) M3 major version (the minimum compatible version).
            m3_version: (String, Deprecated) M3 major version (deprecated, use m3aggregator_version).
            maintenance_window_dow: (String) Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
            maintenance_window_time: (String) Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
            network: (String) CIDR address block.
            plan: (String) Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are hobbyist, startup-x, business-x and premium-x where x is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the Aiven pricing page.
            port: (Number)
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            project_vpc_id: (String) Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
            read: (String)
            route: (String)
            service_host: (String) The hostname of the service.
            service_integrations: (Block List) Service integrations to specify when creating a service. Not applied after initial service creation (see below for nested schema)
            service_name: (String) Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
            service_password: (String, Sensitive) Password used for connecting to the service, if applicable
            service_port: (Number) The port of the service
            service_type: (String) Aiven internal service type code
            service_uri: (String, Sensitive) URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
            service_username: (String) Username used for connecting to the service, if applicable
            source_service_name: (String) Name of the source service
            ssl: (Boolean)
            state: (String) Service state. One of POWEROFF, REBALANCING, REBUILDING or RUNNING
            static_ips: (Set of String) Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
            tag: (Block Set) Tags are key-value pairs that allow you to categorize services. (see below for nested schema)
            termination_protection: (Boolean) Prevents the service from being deleted. It is recommended to set this to true for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            usage: (String)
            value: (String) Service tag value
        importStatements:
            - terraform import aiven_m3aggregator.m3a project/service_name
    aiven_m3db Resource - terraform-provider-aiven:
        subCategory: ""
        description: The M3 DB resource allows the creation and management of Aiven M3 services.
        name: aiven_m3db Resource - terraform-provider-aiven
        title: aiven_m3db Resource - terraform-provider-aiven
        argumentDocs:
            additional_backup_regions: (List of String) Additional Cloud Regions for Backup Replication.
            additional_disk_space: (String) Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            aggregations: (List of String) List of aggregations to be applied.
            allow_tag_name_duplicates: (Boolean) Allows for duplicate tags to appear on series (not allowed by default).
            allow_tag_value_empty: (Boolean) Allows for empty tags to appear on series (not allowed by default).
            block_data_expiry_duration: (String) Controls how long we wait before expiring stale data.
            blocksize_duration: (String) Controls how long to keep a block in memory before flushing to a fileset on disk.
            buffer_future_duration: (String) Controls how far into the future writes to the namespace will be accepted.
            buffer_past_duration: (String) Controls how far into the past writes to the namespace will be accepted.
            cloud_name: (String) Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (aws, azure, do google, upcloud, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like here for Google and here for AWS.
            component: (String)
            components: (List of Object) Service component information objects (see below for nested schema)
            create: (String)
            custom_domain: (String) Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
            default: (String)
            delete: (String)
            description: (String) Description for IP filter list entry.
            disk_space: (String, Deprecated) Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            disk_space_cap: (String) The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
            disk_space_default: (String) The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for disk_space
            disk_space_step: (String) The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. disk_space needs to increment from disk_space_default by increments of this size.
            disk_space_used: (String) Disk space that service is currently using
            drop: (Boolean) Only store the derived metric (as specified in the roll-up rules), if any.
            filter: (String) Matching metric names with wildcards (using name:wildcard) or matching tags and their (optionally wildcarded) values. For value, ! can be used at start of value for negation, and multiple filters can be supplied using space as separator.
            host: (String)
            id: (String) The ID of this resource.
            integration_type: (String) Type of the service integration. The only supported value at the moment is read_replica
            ip_filter: (List of String, Deprecated) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            ip_filter_object: '(Block List, Max: 1024) Allow incoming connections from CIDR address block, e.g. ''10.20.0.0/16''. (see below for nested schema)'
            ip_filter_string: (List of String) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            kafka_authentication_method: (String)
            key: (String) Service tag key
            limits: '(Block List, Max: 1) M3 limits. (see below for nested schema)'
            m3: '(Block List, Max: 1) M3 specific configuration options. (see below for nested schema)'
            m3coordinator: (Boolean) Allow clients to connect to m3coordinator with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
            m3coordinator_enable_graphite_carbon_ingest: (Boolean) Enables access to Graphite Carbon plaintext metrics ingestion. It can be enabled only for services inside VPCs. The metrics are written to aggregated namespaces only.
            m3db: (List of Object) M3 specific server provided values (see below for nested schema)
            m3db_user_config: '(Block List, Max: 1) M3db user configurable settings (see below for nested schema)'
            m3db_version: (String) M3 major version (the minimum compatible version).
            m3_version: (String, Deprecated) M3 major version (deprecated, use m3db_version).
            maintenance_window_dow: (String) Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
            maintenance_window_time: (String) Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
            mapping: '(Block List, Max: 10) List of M3 mapping rules. (see below for nested schema)'
            max_recently_queried_series_blocks: (Number) The maximum number of blocks that can be read in a given lookback period.
            max_recently_queried_series_disk_bytes_read: (Number) The maximum number of disk bytes that can be read in a given lookback period.
            max_recently_queried_series_lookback: (String) The lookback period for 'max_recently_queried_series_blocks' and 'max_recently_queried_series_disk_bytes_read'.
            name: (String) The name of the namespace.
            namespaces: '(Block List, Max: 2147483647) List of M3 namespaces. (see below for nested schema)'
            namespaces_object: '(Block List, Max: 10) This rule will be used to store the metrics in the given namespace(s). If a namespace is target of rules, the global default aggregation will be automatically disabled. Note that specifying filters that match no namespaces whatsoever will be returned as an error. Filter the namespace by exact match of retention period and resolution. (see below for nested schema)'
            namespaces_string: (List of String) This rule will be used to store the metrics in the given namespace(s). If a namespace is target of rules, the global default aggregation will be automatically disabled. Note that specifying filters that match no namespaces whatsoever will be returned as an error. Filter the namespace by glob (=wildcards).
            network: (String) CIDR address block.
            options: '(Block List, Max: 1) Namespace options. (see below for nested schema)'
            plan: (String) Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are hobbyist, startup-x, business-x and premium-x where x is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the Aiven pricing page.
            port: (Number)
            private_access: '(Block List, Max: 1) Allow access to selected service ports from private networks. (see below for nested schema)'
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            project_to_fork_from: (String) Name of another project to fork a service from. This has effect only when a new service is being created.
            project_vpc_id: (String) Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
            public_access: '(Block List, Max: 1) Allow access to selected service ports from the public Internet. (see below for nested schema)'
            query_docs: (Number) The maximum number of docs fetched in single query.
            query_require_exhaustive: (Boolean) When query limits are exceeded, whether to return error or return partial results.
            query_series: (Number) The maximum number of series fetched in single query.
            read: (String)
            resolution: (String) The resolution for an aggregated namespace.
            retention: (String) The retention period of the matching namespace.
            retention_options: '(Block List, Max: 1) Retention options. (see below for nested schema)'
            retention_period_duration: (String) Controls the duration of time that M3DB will retain data for the namespace.
            route: (String)
            rules: '(Block List, Max: 1) M3 rules. (see below for nested schema)'
            service_host: (String) The hostname of the service.
            service_integrations: (Block List) Service integrations to specify when creating a service. Not applied after initial service creation (see below for nested schema)
            service_name: (String) Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
            service_password: (String, Sensitive) Password used for connecting to the service, if applicable
            service_port: (Number) The port of the service
            service_to_fork_from: (String) Name of another service to fork from. This has effect only when a new service is being created.
            service_type: (String) Aiven internal service type code
            service_uri: (String, Sensitive) URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
            service_username: (String) Username used for connecting to the service, if applicable
            snapshot_enabled: (Boolean) Controls whether M3DB will create snapshot files for this namespace.
            source_service_name: (String) Name of the source service
            ssl: (Boolean)
            state: (String) Service state. One of POWEROFF, REBALANCING, REBUILDING or RUNNING
            static_ips: (Set of String) Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
            tag: (Block Set) Tags are key-value pairs that allow you to categorize services. (see below for nested schema)
            tag_options: '(Block List, Max: 1) M3 Tag Options. (see below for nested schema)'
            tags: '(Block List, Max: 10) List of tags to be appended to matching metrics. (see below for nested schema)'
            termination_protection: (Boolean) Prevents the service from being deleted. It is recommended to set this to true for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) The type of aggregation (aggregated/unaggregated).
            update: (String)
            usage: (String)
            value: (String) Value of the tag.
            writes_to_commitlog: (Boolean) Controls whether M3DB will include writes to this namespace in the commitlog.
        importStatements:
            - terraform import aiven_m3db.m3 project/service_name
    aiven_m3db_user Resource - terraform-provider-aiven:
        subCategory: ""
        description: The M3DB User resource allows the creation and management of Aiven M3DB Users.
        name: aiven_m3db_user Resource - terraform-provider-aiven
        title: aiven_m3db_user Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            password: (String, Sensitive) The password of the M3DB User.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of the user account. Tells whether the user is the primary account or a regular account.
            update: (String)
            username: (String) The actual name of the M3DB User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        importStatements:
            - terraform import aiven_m3db_user.foo project/service_name/username
    aiven_mirrormaker_replication_flow Resource - terraform-provider-aiven:
        subCategory: ""
        description: The MirrorMaker 2 Replication Flow resource allows the creation and management of MirrorMaker 2 Replication Flows on Aiven Cloud.
        name: aiven_mirrormaker_replication_flow Resource - terraform-provider-aiven
        title: aiven_mirrormaker_replication_flow Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            default: (String)
            delete: (String)
            emit_heartbeats_enabled: (Boolean) Emit heartbeats enabled. The default value is false.
            enable: (Boolean) Enable of disable replication flows for a service.
            id: (String) The ID of this resource.
            offset_syncs_topic_location: (String) Offset syncs topic location.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            replication_policy_class: (String) Replication policy class. The possible values are org.apache.kafka.connect.mirror.DefaultReplicationPolicy and org.apache.kafka.connect.mirror.IdentityReplicationPolicy. The default value is org.apache.kafka.connect.mirror.DefaultReplicationPolicy.
            service_name: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            source_cluster: '(String) Source cluster alias. Maximum length: 128.'
            sync_group_offsets_enabled: (Boolean) Sync consumer group offsets. The default value is false.
            sync_group_offsets_interval_seconds: (Number) Frequency of consumer group offset sync. The default value is 1.
            target_cluster: '(String) Target cluster alias. Maximum length: 128.'
            timeouts: (Block, Optional) (see below for nested schema)
            topics: (List of String) List of topics and/or regular expressions to replicate
            topics_blacklist: (List of String) List of topics and/or regular expressions to not replicate.
            update: (String)
        importStatements:
            - terraform import aiven_mirrormaker_replication_flow.f1 project/service_name/source_cluster/target_cluster
    aiven_mysql Resource - terraform-provider-aiven:
        subCategory: ""
        description: The MySQL resource allows the creation and management of Aiven MySQL services.
        name: aiven_mysql Resource - terraform-provider-aiven
        title: aiven_mysql Resource - terraform-provider-aiven
        argumentDocs:
            additional_backup_regions: (List of String) Additional Cloud Regions for Backup Replication.
            additional_disk_space: (String) Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            admin_password: (String, Sensitive) Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.
            admin_username: (String) Custom username for admin user. This must be set only when a new service is being created.
            backup_hour: (Number) The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.
            backup_minute: (Number) The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.
            binlog_retention_period: (Number) The minimum amount of time in seconds to keep binlog entries before deletion. This may be extended for services that require binlog entries for longer than the default for example if using the MySQL Debezium Kafka connector.
            cloud_name: (String) Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (aws, azure, do google, upcloud, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like here for Google and here for AWS.
            component: (String)
            components: (List of Object) Service component information objects (see below for nested schema)
            connect_timeout: (Number) The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake.
            create: (String)
            dbname: (String) Database name for bootstrapping the initial connection.
            default: (String)
            default_time_zone: (String) Default server time zone as an offset from UTC (from -12:00 to +12:00), a time zone name, or 'SYSTEM' to use the MySQL server default.
            delete: (String)
            description: (String) Description for IP filter list entry.
            disk_space: (String, Deprecated) Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            disk_space_cap: (String) The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
            disk_space_default: (String) The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for disk_space
            disk_space_step: (String) The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. disk_space needs to increment from disk_space_default by increments of this size.
            disk_space_used: (String) Disk space that service is currently using
            group_concat_max_len: (Number) The maximum permitted result length in bytes for the GROUP_CONCAT() function.
            host: (String) Hostname or IP address of the server where to migrate data from.
            id: (String) The ID of this resource.
            ignore_dbs: (String) Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
            information_schema_stats_expiry: (Number) The time, in seconds, before cached statistics expire.
            innodb_change_buffer_max_size: (Number) Maximum size for the InnoDB change buffer, as a percentage of the total size of the buffer pool. Default is 25.
            innodb_flush_neighbors: '(Number) Specifies whether flushing a page from the InnoDB buffer pool also flushes other dirty pages in the same extent (default is 1): 0 - dirty pages in the same extent are not flushed,  1 - flush contiguous dirty pages in the same extent,  2 - flush dirty pages in the same extent.'
            innodb_ft_min_token_size: (Number) Minimum length of words that are stored in an InnoDB FULLTEXT index. Changing this parameter will lead to a restart of the MySQL service.
            innodb_ft_server_stopword_table: (String) This option is used to specify your own InnoDB FULLTEXT index stopword list for all InnoDB tables.
            innodb_lock_wait_timeout: (Number) The length of time in seconds an InnoDB transaction waits for a row lock before giving up. Default is 120.
            innodb_log_buffer_size: (Number) The size in bytes of the buffer that InnoDB uses to write to the log files on disk.
            innodb_online_alter_log_max_size: (Number) The upper limit in bytes on the size of the temporary log files used during online DDL operations for InnoDB tables.
            innodb_print_all_deadlocks: (Boolean) When enabled, information about all deadlocks in InnoDB user transactions is recorded in the error log. Disabled by default.
            innodb_read_io_threads: (Number) The number of I/O threads for read operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
            innodb_rollback_on_timeout: (Boolean) When enabled a transaction timeout causes InnoDB to abort and roll back the entire transaction. Changing this parameter will lead to a restart of the MySQL service.
            innodb_thread_concurrency: (Number) Defines the maximum number of threads permitted inside of InnoDB. Default is 0 (infinite concurrency - no limit).
            innodb_write_io_threads: (Number) The number of I/O threads for write operations in InnoDB. Default is 4. Changing this parameter will lead to a restart of the MySQL service.
            integration_type: (String) Type of the service integration. The only supported value at the moment is read_replica
            interactive_timeout: (Number) The number of seconds the server waits for activity on an interactive connection before closing it.
            internal_tmp_mem_storage_engine: (String) The storage engine for in-memory internal temporary tables.
            ip_filter: (List of String, Deprecated) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            ip_filter_object: '(Block List, Max: 1024) Allow incoming connections from CIDR address block, e.g. ''10.20.0.0/16''. (see below for nested schema)'
            ip_filter_string: (List of String) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            kafka_authentication_method: (String)
            key: (String) Service tag key
            long_query_time: (Number) The slow_query_logs work as SQL statements that take more than long_query_time seconds to execute. Default is 10s.
            maintenance_window_dow: (String) Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
            maintenance_window_time: (String) Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
            max_allowed_packet: (Number) Size of the largest message in bytes that can be received by the server. Default is 67108864 (64M).
            max_heap_table_size: (Number) Limits the size of internal in-memory tables. Also set tmp_table_size. Default is 16777216 (16M).
            method: (String) The migration method to be used (currently supported only by Redis, MySQL and PostgreSQL service types).
            migration: '(Block List, Max: 1) Migrate data from existing server. (see below for nested schema)'
            mysql: (List of Object) MySQL specific server provided values (see below for nested schema)
            mysql_user_config: '(Block List, Max: 1) Mysql user configurable settings (see below for nested schema)'
            mysql_version: (String) MySQL major version.
            mysqlx: (Boolean) Allow clients to connect to mysqlx with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
            net_buffer_length: (Number) Start sizes of connection buffer and result buffer. Default is 16384 (16K). Changing this parameter will lead to a restart of the MySQL service.
            net_read_timeout: (Number) The number of seconds to wait for more data from a connection before aborting the read.
            net_write_timeout: (Number) The number of seconds to wait for a block to be written to a connection before aborting the write.
            network: (String) CIDR address block.
            password: (String, Sensitive) Password for authentication with the server where to migrate data from.
            plan: (String) Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are hobbyist, startup-x, business-x and premium-x where x is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the Aiven pricing page.
            port: (Number) Port number of the server where to migrate data from.
            private_access: '(Block List, Max: 1) Allow access to selected service ports from private networks. (see below for nested schema)'
            privatelink_access: '(Block List, Max: 1) Allow access to selected service components through Privatelink. (see below for nested schema)'
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            project_to_fork_from: (String) Name of another project to fork a service from. This has effect only when a new service is being created.
            project_vpc_id: (String) Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
            prometheus: (Boolean) Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
            public_access: '(Block List, Max: 1) Allow access to selected service ports from the public Internet. (see below for nested schema)'
            read: (String)
            recovery_target_time: (String) Recovery target time when forking a service. This has effect only when a new service is being created.
            route: (String)
            service_host: (String) The hostname of the service.
            service_integrations: (Block List) Service integrations to specify when creating a service. Not applied after initial service creation (see below for nested schema)
            service_name: (String) Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
            service_password: (String, Sensitive) Password used for connecting to the service, if applicable
            service_port: (Number) The port of the service
            service_to_fork_from: (String) Name of another service to fork from. This has effect only when a new service is being created.
            service_type: (String) Aiven internal service type code
            service_uri: (String, Sensitive) URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
            service_username: (String) Username used for connecting to the service, if applicable
            slow_query_log: (Boolean) Slow query log enables capturing of slow queries. Setting slow_query_log to false also truncates the mysql.slow_log table. Default is off.
            sort_buffer_size: (Number) Sort buffer size in bytes for ORDER BY optimization. Default is 262144 (256K).
            source_service_name: (String) Name of the source service
            sql_mode: (String) Global SQL mode. Set to empty to use MySQL server defaults. When creating a new service and not setting this field Aiven default SQL mode (strict, SQL standard compliant) will be assigned.
            sql_require_primary_key: (Boolean) Require primary key to be defined for new tables or old tables modified with ALTER TABLE and fail if missing. It is recommended to always have primary keys because various functionality may break if any large table is missing them.
            ssl: (Boolean) The server where to migrate data from is secured with SSL. The default value is true.
            state: (String) Service state. One of POWEROFF, REBALANCING, REBUILDING or RUNNING
            static_ips: (Set of String) Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
            tag: (Block Set) Tags are key-value pairs that allow you to categorize services. (see below for nested schema)
            termination_protection: (Boolean) Prevents the service from being deleted. It is recommended to set this to true for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
            timeouts: (Block, Optional) (see below for nested schema)
            tmp_table_size: (Number) Limits the size of internal in-memory tables. Also set max_heap_table_size. Default is 16777216 (16M).
            update: (String)
            usage: (String)
            username: (String) User name for authentication with the server where to migrate data from.
            value: (String) Service tag value
            wait_timeout: (Number) The number of seconds the server waits for activity on a noninteractive connection before closing it.
        importStatements:
            - terraform import aiven_mysql.mysql1 project/service_name
    aiven_mysql_database Resource - terraform-provider-aiven:
        subCategory: ""
        description: The MySQL Database resource allows the creation and management of Aiven MySQL Databases.
        name: aiven_mysql_database Resource - terraform-provider-aiven
        title: aiven_mysql_database Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            database_name: (String) The name of the service database. This property cannot be changed, doing so forces recreation of the resource.
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            termination_protection: (Boolean) It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is recommended to enable this for any production databases containing critical data. The default value is false.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - terraform import aiven_mysql_database.mydatabase project/service_name/database_name
    aiven_mysql_user Resource - terraform-provider-aiven:
        subCategory: ""
        description: The MySQL User resource allows the creation and management of Aiven MySQL Users.
        name: aiven_mysql_user Resource - terraform-provider-aiven
        title: aiven_mysql_user Resource - terraform-provider-aiven
        argumentDocs:
            access_cert: (String, Sensitive) Access certificate for the user
            access_key: (String, Sensitive) Access certificate key for the user
            authentication: (String) Authentication details. The possible values are caching_sha2_password and mysql_native_password.
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            password: (String, Sensitive) The password of the MySQL User ( not applicable for all services ).
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of the user account. Tells whether the user is the primary account or a regular account.
            update: (String)
            username: (String) The actual name of the MySQL User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        importStatements:
            - terraform import aiven_mysql_user.foo project/service_name/username
    aiven_opensearch Resource - terraform-provider-aiven:
        subCategory: ""
        description: The OpenSearch resource allows the creation and management of Aiven OpenSearch services.
        name: aiven_opensearch Resource - terraform-provider-aiven
        title: aiven_opensearch Resource - terraform-provider-aiven
        argumentDocs:
            action_auto_create_index_enabled: (Boolean) Explicitly allow or block automatic creation of indices. Defaults to true.
            action_destructive_requires_name: (Boolean) Require explicit index names when deleting.
            additional_backup_regions: (List of String) Additional Cloud Regions for Backup Replication.
            additional_disk_space: (String) Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            client_id: (String) The ID of the OpenID Connect client configured in your IdP. Required.
            client_secret: (String) The client secret of the OpenID Connect client configured in your IdP. Required.
            cloud_name: (String) Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (aws, azure, do google, upcloud, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like here for Google and here for AWS.
            cluster_max_shards_per_node: (Number) Controls the number of shards allowed in the cluster per data node.
            cluster_routing_allocation_node_concurrent_recoveries: (Number) How many concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen on a node. Defaults to 2.
            component: (String)
            components: (List of Object) Service component information objects (see below for nested schema)
            connect_url: (String) The URL of your IdP where the Security plugin can find the OpenID Connect metadata/configuration settings.
            create: (String)
            custom_domain: (String) Serve the web frontend using a custom CNAME pointing to the Aiven DNS name.
            default: (String)
            delete: (String)
            description: (String) Description for IP filter list entry.
            disable_replication_factor_adjustment: '(Boolean, Deprecated) Disable automatic replication factor adjustment for multi-node services. By default, Aiven ensures all indexes are replicated at least to two nodes. Note: Due to potential data loss in case of losing a service node, this setting can no longer be activated.'
            disk_space: (String, Deprecated) Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            disk_space_cap: (String) The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
            disk_space_default: (String) The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for disk_space
            disk_space_step: (String) The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. disk_space needs to increment from disk_space_default by increments of this size.
            disk_space_used: (String) Disk space that service is currently using
            email_sender_name: (String) This should be identical to the Sender name defined in Opensearch dashboards.
            email_sender_password: (String, Sensitive) Sender password for Opensearch alerts to authenticate with SMTP server.
            email_sender_username: (String) Sender username for Opensearch alerts.
            enabled: (Boolean) Enables or disables OpenID Connect authentication for OpenSearch. When enabled, users can authenticate using OpenID Connect with an Identity Provider. The default value is true.
            header: (String) HTTP header name of the JWT token. Optional. Default is Authorization. The default value is Authorization.
            host: (String)
            http_max_content_length: (Number) Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes.
            http_max_header_size: (Number) The max size of allowed headers, in bytes.
            http_max_initial_line_length: (Number) The max length of an HTTP URL, in bytes.
            id: (String) The ID of this resource.
            idp_entity_id: (String) The unique identifier for the Identity Provider (IdP) entity that is used for SAML authentication. This value is typically provided by the IdP.
            idp_metadata_url: (String) The URL of the SAML metadata for the Identity Provider (IdP). This is used to configure SAML-based authentication with the IdP.
            idp_pemtrustedcas_content: (String) This parameter specifies the PEM-encoded root certificate authority (CA) content for the SAML identity provider (IdP) server verification. The root CA content is used to verify the SSL/TLS certificate presented by the server.
            index_patterns: '(Block List, Max: 512) Index patterns. (see below for nested schema)'
            index_template: '(Block List, Max: 1) Template settings for all new indexes. (see below for nested schema)'
            indices_fielddata_cache_size: (Number) Relative amount. Maximum amount of heap memory used for field data cache. This is an expert setting; decreasing the value too much will increase overhead of loading field data; too much memory used for field data cache will decrease amount of heap available for other operations.
            indices_memory_index_buffer_size: (Number) Percentage value. Default is 10%. Total amount of heap used for indexing buffer, before writing segments to disk. This is an expert setting. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance.
            indices_queries_cache_size: (Number) Percentage value. Default is 10%. Maximum amount of heap used for query cache. This is an expert setting. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other OpenSearch functionality.
            indices_query_bool_max_clause_count: (Number) Maximum number of clauses Lucene BooleanQuery can have. The default value (1024) is relatively high, and increasing it may cause performance issues. Investigate other approaches first before increasing this value.
            indices_recovery_max_bytes_per_sec: (Number) Limits total inbound and outbound recovery traffic for each node. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Defaults to 40mb.
            indices_recovery_max_concurrent_file_chunks: (Number) Number of file chunks sent in parallel for each recovery. Defaults to 2.
            integration_type: (String) Type of the service integration. The only supported value at the moment is read_replica
            ip_filter: (List of String, Deprecated) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            ip_filter_object: '(Block List, Max: 1024) Allow incoming connections from CIDR address block, e.g. ''10.20.0.0/16''. (see below for nested schema)'
            ip_filter_string: (List of String) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            jwt_header: '(String) The HTTP header that stores the token. Typically the Authorization header with the Bearer schema: Authorization: Bearer . Optional. Default is Authorization.'
            jwt_url_parameter: (String) If the token is not transmitted in the HTTP header, but as an URL parameter, define the name of the parameter here. Optional.
            kafka_authentication_method: (String)
            keep_index_refresh_interval: (Boolean) Aiven automation resets index.refresh_interval to default value for every index to be sure that indices are always visible to search. If it doesn't fit your case, you can disable this by setting up this flag to true.
            key: (String) Service tag key
            maintenance_window_dow: (String) Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
            maintenance_window_time: (String) Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
            mapping_nested_objects_limit: (Number) The maximum number of nested JSON objects that a single document can contain across all nested types. This limit helps to prevent out of memory errors when a document contains too many nested objects. Default is 10000.
            max_index_count: (Number, Deprecated) Use index_patterns instead. The default value is 0.
            max_old_space_size: '(Number) Limits the maximum amount of memory (in MiB) the OpenSearch Dashboards process can use. This sets the max_old_space_size option of the nodejs running the OpenSearch Dashboards. Note: the memory reserved by OpenSearch Dashboards is not available for OpenSearch. The default value is 128.'
            network: (String) CIDR address block.
            number_of_replicas: (Number) The number of replicas each primary shard has.
            number_of_shards: (Number) The number of primary shards that an index should have.
            openid: '(Block List, Max: 1) OpenSearch OpenID Connect Configuration. (see below for nested schema)'
            opensearch: (List of Object) OpenSearch server provided values (see below for nested schema)
            opensearch_dashboards: '(Block List, Max: 1) OpenSearch Dashboards settings. (see below for nested schema)'
            opensearch_dashboards_uri: (String)
            opensearch_request_timeout: (Number) Timeout in milliseconds for requests made by OpenSearch Dashboards towards OpenSearch. The default value is 30000.
            opensearch_user_config: '(Block List, Max: 1) Opensearch user configurable settings (see below for nested schema)'
            opensearch_version: (String) OpenSearch major version.
            override_main_response_version: (Boolean) Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default is false.
            pattern: (String) fnmatch pattern.
            plan: (String) Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are hobbyist, startup-x, business-x and premium-x where x is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the Aiven pricing page.
            port: (Number)
            private_access: '(Block List, Max: 1) Allow access to selected service ports from private networks. (see below for nested schema)'
            privatelink_access: '(Block List, Max: 1) Allow access to selected service components through Privatelink. (see below for nested schema)'
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            project_to_fork_from: (String) Name of another project to fork a service from. This has effect only when a new service is being created.
            project_vpc_id: (String) Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
            prometheus: (Boolean) Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
            public_access: '(Block List, Max: 1) Allow access to selected service ports from the public Internet. (see below for nested schema)'
            read: (String)
            recovery_basebackup_name: (String) Name of the basebackup to restore in forked service.
            refresh_rate_limit_count: (Number) The maximum number of unknown key IDs in the time frame. Default is 10. Optional. The default value is 10.
            refresh_rate_limit_time_window_ms: (Number) The time frame to use when checking the maximum number of unknown key IDs, in milliseconds. Optional.Default is 10000 (10 seconds). The default value is 10000.
            reindex_remote_whitelist: (List of String) Whitelisted addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
            roles_key: (String) The key in the JSON payload that stores the user’s roles. The value of this key must be a comma-separated list of roles. Required only if you want to use roles in the JWT.
            route: (String)
            saml: '(Block List, Max: 1) OpenSearch SAML configuration. (see below for nested schema)'
            scope: (String) The scope of the identity token issued by the IdP. Optional. Default is openid profile email address phone.
            script_max_compilations_rate: (String) Script compilation circuit breaker limits the number of inline script compilations within a period of time. Default is use-context.
            search_max_buckets: (Number) Maximum number of aggregation buckets allowed in a single response. OpenSearch default value is used when this is not defined.
            service_host: (String) The hostname of the service.
            service_integrations: (Block List) Service integrations to specify when creating a service. Not applied after initial service creation (see below for nested schema)
            service_name: (String) Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
            service_password: (String, Sensitive) Password used for connecting to the service, if applicable
            service_port: (Number) The port of the service
            service_to_fork_from: (String) Name of another service to fork from. This has effect only when a new service is being created.
            service_type: (String) Aiven internal service type code
            service_uri: (String, Sensitive) URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
            service_username: (String) Username used for connecting to the service, if applicable
            sorting_algorithm: (String) Deletion sorting algorithm. The default value is creation_date.
            source_service_name: (String) Name of the source service
            sp_entity_id: (String) The unique identifier for the Service Provider (SP) entity that is used for SAML authentication. This value is typically provided by the SP.
            ssl: (Boolean)
            state: (String) Service state. One of POWEROFF, REBALANCING, REBUILDING or RUNNING
            static_ips: (Set of String) Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
            subject_key: (String) The key in the JSON payload that stores the user’s name. If not defined, the subject registered claim is used. Most IdP providers use the preferred_username claim. Optional.
            tag: (Block Set) Tags are key-value pairs that allow you to categorize services. (see below for nested schema)
            termination_protection: (Boolean) Prevents the service from being deleted. It is recommended to set this to true for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
            thread_pool_analyze_queue_size: (Number) Size for the thread pool queue. See documentation for exact details.
            thread_pool_analyze_size: (Number) Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
            thread_pool_force_merge_size: (Number) Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
            thread_pool_get_queue_size: (Number) Size for the thread pool queue. See documentation for exact details.
            thread_pool_get_size: (Number) Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
            thread_pool_search_queue_size: (Number) Size for the thread pool queue. See documentation for exact details.
            thread_pool_search_size: (Number) Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
            thread_pool_search_throttled_queue_size: (Number) Size for the thread pool queue. See documentation for exact details.
            thread_pool_search_throttled_size: (Number) Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
            thread_pool_write_queue_size: (Number) Size for the thread pool queue. See documentation for exact details.
            thread_pool_write_size: (Number) Size for the thread pool. See documentation for exact details. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            usage: (String)
            value: (String) Service tag value
        importStatements:
            - terraform import aiven_opensearch.os1 project/service_name
    aiven_opensearch_acl_config Resource - terraform-provider-aiven:
        subCategory: ""
        description: The OpenSearch ACL Config resource allows the creation and management of Aiven OpenSearch ACLs.
        name: aiven_opensearch_acl_config Resource - terraform-provider-aiven
        title: aiven_opensearch_acl_config Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            default: (String)
            delete: (String)
            enabled: (Boolean) Enable OpenSearch ACLs. When disabled authenticated service users have unrestricted access. The default value is true.
            extended_acl: (Boolean) Index rules can be applied in a limited fashion to the _mget, _msearch and _bulk APIs (and only those) by enabling the ExtendedAcl option for the service. When it is enabled, users can use these APIs as long as all operations only target indexes they have been granted access to. The default value is true.
            id: (String) The ID of this resource.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - terraform import aiven_opensearch_acl_config.foo project/service_name
    aiven_opensearch_acl_rule Resource - terraform-provider-aiven:
        subCategory: ""
        description: The OpenSearch ACL Rule resource models a single ACL Rule for an Aiven OpenSearch service.
        name: aiven_opensearch_acl_rule Resource - terraform-provider-aiven
        title: aiven_opensearch_acl_rule Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            index: '(String) The index pattern for this ACL entry. Maximum length: 249. This property cannot be changed, doing so forces recreation of the resource.'
            permission: (String) The permissions for this ACL entry. The possible values are deny, admin, read, readwrite and write.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            username: '(String) The username for the ACL entry. Maximum length: 40. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.'
        importStatements:
            - terraform import aiven_opensearch_acl_rule.os_acl_rule project/service_name/username/index
    aiven_opensearch_security_plugin_config Resource - terraform-provider-aiven:
        subCategory: ""
        description: The OpenSearch Security Plugin Config resource allows the creation and management of AivenOpenSearch Security Plugin config.
        name: aiven_opensearch_security_plugin_config Resource - terraform-provider-aiven
        title: aiven_opensearch_security_plugin_config Resource - terraform-provider-aiven
        argumentDocs:
            admin_enabled: (Boolean) Whether the os-sec-admin user is enabled. This indicates whether the user management with the security plugin is enabled. This is always true when the os-sec-admin password was set at least once.
            admin_password: (String, Sensitive) The password for the os-sec-admin user.
            available: (Boolean) Whether the security plugin is available. This is always true for recently created services.
            create: (String)
            default: (String)
            delete: (String)
            enabled: (Boolean) Whether the security plugin is enabled. This is always true for recently created services.
            id: (String) The ID of this resource.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - terraform import aiven_opensearch_security_plugin_config.foo project/service_name
    aiven_opensearch_user Resource - terraform-provider-aiven:
        subCategory: ""
        description: The OpenSearch User resource allows the creation and management of Aiven OpenSearch Users.
        name: aiven_opensearch_user Resource - terraform-provider-aiven
        title: aiven_opensearch_user Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            password: (String, Sensitive) The password of the OpenSearch User.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of the user account. Tells whether the user is the primary account or a regular account.
            update: (String)
            username: (String) The actual name of the OpenSearch User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        importStatements:
            - terraform import aiven_opensearch_user.foo project/service_name/username
    aiven_organization Resource - terraform-provider-aiven:
        subCategory: ""
        description: Creates and manages an organization in Aiven.
        name: aiven_organization Resource - terraform-provider-aiven
        title: aiven_organization Resource - terraform-provider-aiven
        argumentDocs:
            create: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            create_time: (String) Timestamp of the creation of the organization.
            delete: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
            id: (String) Identifier of the organization.
            name: (String) Name of the organization.
            read: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Read operations occur during any refresh or planning operation when refresh is enabled.
            tenant_id: (String) Tenant identifier of the organization.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String) A string that can be parsed as a duration consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
            update_time: (String) Timestamp of the last update of the organization.
        importStatements:
            - terraform import aiven_organization.organization1 organization_id
    aiven_organization_user Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Organization User resource allows the creation and management of an Aiven Organization User. During the creation of aiven_organization_userresource, an email invitation will be sent to a user using user_email address. If the user accepts an invitation, they will become a member of the organization. The deletion of aiven_organization_user will not only delete the invitation if one was sent but not yet accepted by the user, it will also eliminate the member from the organization if one has accepted an invitation previously.
        name: aiven_organization_user Resource - terraform-provider-aiven
        title: aiven_organization_user Resource - terraform-provider-aiven
        argumentDocs:
            accepted: (Boolean) This is a boolean flag that determines whether an invitation was accepted or not by the user. false value means that the invitation was sent to the user but not yet accepted. true means that the user accepted the invitation and now a member of an organization.
            create: (String)
            create_time: (String) Time of creation
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            invited_by: (String) The email address of the user who sent an invitation to the user.
            organization_id: (String) The unique organization ID. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            user_email: (String) This is a user email address that first will be invited, and after accepting an invitation, they become a member of the organization. This property cannot be changed, doing so forces recreation of the resource.
        importStatements: []
    aiven_organization_user_group Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Organization User Group resource allows the creation and management of an Aiven Organization Groups.
        name: aiven_organization_user_group Resource - terraform-provider-aiven
        title: aiven_organization_user_group Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            create_time: (String) Time of creation
            default: (String)
            delete: (String)
            description: (String) The organization user group description. This property cannot be changed, doing so forces recreation of the resource.
            id: (String) The ID of this resource.
            name: (String) The organization user group name. This property cannot be changed, doing so forces recreation of the resource.
            organization_id: (String) The unique organization ID. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            update_time: (String) Time of last update
        importStatements: []
    aiven_organizational_unit Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Organizational Unit resource allows the creation and management of Aiven Organizational Units.
        name: aiven_organizational_unit Resource - terraform-provider-aiven
        title: aiven_organizational_unit Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            create_time: (String) Time of creation
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            name: (String) Organizational Unit name
            parent_id: (String) Parent ID
            read: (String)
            tenant_id: (String) Tenant ID
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            update_time: (String) Time of last update
        importStatements:
            - terraform import aiven_organizational_unit.organizational_unit1 organizational_unit_id
    aiven_pg Resource - terraform-provider-aiven:
        subCategory: ""
        description: The PG resource allows the creation and management of Aiven PostgreSQL services.
        name: aiven_pg Resource - terraform-provider-aiven
        title: aiven_pg Resource - terraform-provider-aiven
        argumentDocs:
            additional_backup_regions: (List of String) Additional Cloud Regions for Backup Replication.
            additional_disk_space: (String) Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            admin_password: (String, Sensitive) Custom password for admin user. Defaults to random string. This must be set only when a new service is being created.
            admin_username: (String) Custom username for admin user. This must be set only when a new service is being created.
            autodb_idle_timeout: (Number) If the automatically created database pools have been unused this many seconds, they are freed. If 0 then timeout is disabled. (seconds).
            autodb_max_db_connections: (Number) Do not allow more than this many server connections per database (regardless of user). Setting it to 0 means unlimited.
            autodb_pool_mode: (String) PGBouncer pool mode.
            autodb_pool_size: (Number) If non-zero then create automatically a pool of that size per user when a pool doesn't exist.
            autovacuum_analyze_scale_factor: (Number) Specifies a fraction of the table size to add to autovacuum_analyze_threshold when deciding whether to trigger an ANALYZE. The default is 0.2 (20% of table size).
            autovacuum_analyze_threshold: (Number) Specifies the minimum number of inserted, updated or deleted tuples needed to trigger an  ANALYZE in any one table. The default is 50 tuples.
            autovacuum_freeze_max_age: (Number) Specifies the maximum age (in transactions) that a table's pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.
            autovacuum_max_workers: (Number) Specifies the maximum number of autovacuum processes (other than the autovacuum launcher) that may be running at any one time. The default is three. This parameter can only be set at server start.
            autovacuum_naptime: (Number) Specifies the minimum delay between autovacuum runs on any given database. The delay is measured in seconds, and the default is one minute.
            autovacuum_vacuum_cost_delay: (Number) Specifies the cost delay value that will be used in automatic VACUUM operations. If -1 is specified, the regular vacuum_cost_delay value will be used. The default value is 20 milliseconds.
            autovacuum_vacuum_cost_limit: (Number) Specifies the cost limit value that will be used in automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuum_cost_limit value will be used.
            autovacuum_vacuum_scale_factor: (Number) Specifies a fraction of the table size to add to autovacuum_vacuum_threshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).
            autovacuum_vacuum_threshold: (Number) Specifies the minimum number of updated or deleted tuples needed to trigger a VACUUM in any one table. The default is 50 tuples.
            backup_hour: (Number) The hour of day (in UTC) when backup for the service is started. New backup is only started if previous backup has already completed.
            backup_minute: (Number) The minute of an hour when backup for the service is started. New backup is only started if previous backup has already completed.
            bgwriter_delay: (Number) Specifies the delay between activity rounds for the background writer in milliseconds. Default is 200.
            bgwriter_flush_after: (Number) Whenever more than bgwriter_flush_after bytes have been written by the background writer, attempt to force the OS to issue these writes to the underlying storage. Specified in kilobytes, default is 512. Setting of 0 disables forced writeback.
            bgwriter_lru_maxpages: (Number) In each round, no more than this many buffers will be written by the background writer. Setting this to zero disables background writing. Default is 100.
            bgwriter_lru_multiplier: (Number) The average recent need for new buffers is multiplied by bgwriter_lru_multiplier to arrive at an estimate of the number that will be needed during the next round, (up to bgwriter_lru_maxpages). 1.0 represents a “just in time” policy of writing exactly the number of buffers predicted to be needed. Larger values provide some cushion against spikes in demand, while smaller values intentionally leave writes to be done by server processes. The default is 2.0.
            cloud_name: (String) Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (aws, azure, do google, upcloud, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like here for Google and here for AWS.
            component: (String)
            components: (List of Object) Service component information objects (see below for nested schema)
            create: (String)
            dbname: (String) Primary PostgreSQL database name
            deadlock_timeout: (Number) This is the amount of time, in milliseconds, to wait on a lock before checking to see if there is a deadlock condition.
            default: (String)
            default_toast_compression: (String) Specifies the default TOAST compression method for values of compressible columns (the default is lz4).
            delete: (String)
            description: (String) Description for IP filter list entry.
            disk_space: (String, Deprecated) Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            disk_space_cap: (String) The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
            disk_space_default: (String) The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for disk_space
            disk_space_step: (String) The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. disk_space needs to increment from disk_space_default by increments of this size.
            disk_space_used: (String) Disk space that service is currently using
            enable_ipv6: (Boolean) Register AAAA DNS records for the service, and allow IPv6 packets to service ports.
            host: (String) PostgreSQL master node host IP or name
            id: (String) The ID of this resource.
            idle_in_transaction_session_timeout: (Number) Time out sessions with open transactions after this number of milliseconds.
            ignore_dbs: (String) Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
            ignore_startup_parameters: (List of String) List of parameters to ignore when given in startup packet.
            integration_type: (String) Type of the service integration. The only supported value at the moment is read_replica
            ip_filter: (List of String, Deprecated) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            ip_filter_object: '(Block List, Max: 1024) Allow incoming connections from CIDR address block, e.g. ''10.20.0.0/16''. (see below for nested schema)'
            ip_filter_string: (List of String) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            jit: (Boolean) Controls system-wide use of Just-in-Time Compilation (JIT).
            kafka_authentication_method: (String)
            key: (String) Service tag key
            log_autovacuum_min_duration: (Number) Causes each action executed by autovacuum to be logged if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum actions. Minus-one (the default) disables logging autovacuum actions.
            log_error_verbosity: (String) Controls the amount of detail written in the server log for each message that is logged.
            log_line_prefix: (String) Choose from one of the available log-formats. These can support popular log analyzers like pgbadger, pganalyze etc.
            log_min_duration_statement: (Number) Log statements that take more than this number of milliseconds to run, -1 disables.
            log_temp_files: (Number) Log statements for each temporary file created larger than this number of kilobytes, -1 disables.
            maintenance_window_dow: (String) Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
            maintenance_window_time: (String) Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
            max_background_workers: (Number) The number of background workers for timescaledb operations. You should configure this setting to the sum of your number of databases and the total number of concurrent background workers you want running at any given point in time.
            max_connections: (Number) Connection limit
            max_failover_replication_time_lag: (Number) Number of seconds of master unavailability before triggering database failover to standby. The default value is 60.
            max_files_per_process: (Number) PostgreSQL maximum number of files that can be open per process.
            max_locks_per_transaction: (Number) PostgreSQL maximum locks per transaction.
            max_logical_replication_workers: (Number) PostgreSQL maximum logical replication workers (taken from the pool of max_parallel_workers).
            max_parallel_workers: (Number) Sets the maximum number of workers that the system can support for parallel queries.
            max_parallel_workers_per_gather: (Number) Sets the maximum number of workers that can be started by a single Gather or Gather Merge node.
            max_pred_locks_per_transaction: (Number) PostgreSQL maximum predicate locks per transaction.
            max_prepared_transactions: (Number) PostgreSQL maximum prepared transactions.
            max_replication_slots: (Number) PostgreSQL maximum replication slots.
            max_slot_wal_keep_size: (Number) PostgreSQL maximum WAL size (MB) reserved for replication slots. Default is -1 (unlimited). wal_keep_size minimum WAL size setting takes precedence over this.
            max_stack_depth: (Number) Maximum depth of the stack in bytes.
            max_standby_archive_delay: (Number) Max standby archive delay in milliseconds.
            max_standby_streaming_delay: (Number) Max standby streaming delay in milliseconds.
            max_wal_senders: (Number) PostgreSQL maximum WAL senders.
            max_worker_processes: (Number) Sets the maximum number of background processes that the system can support.
            method: (String) The migration method to be used (currently supported only by Redis, MySQL and PostgreSQL service types).
            migration: '(Block List, Max: 1) Migrate data from existing server. (see below for nested schema)'
            min_pool_size: (Number) Add more server connections to pool if below this number. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size.
            network: (String) CIDR address block.
            password: (String, Sensitive) PostgreSQL admin user password
            pg: '(Block List, Max: 1) PostgreSQL specific server provided values (see below for nested schema)'
            pg_partman_bgw__dot__interval: (Number) Sets the time interval to run pg_partman's scheduled tasks.
            pg_partman_bgw__dot__role: (String) Controls which role to use for pg_partman's scheduled background tasks.
            pg_read_replica: (Boolean, Deprecated) Use read_replica service integration instead.
            pg_service_to_fork_from: (String, Deprecated) Name of the PG Service from which to fork (deprecated, use service_to_fork_from). This has effect only when a new service is being created.
            pg_stat_monitor__dot__pgsm_enable_query_plan: (Boolean) Enables or disables query plan monitoring.
            pg_stat_monitor__dot__pgsm_max_buckets: (Number) Sets the maximum number of buckets .
            pg_stat_monitor_enable: (Boolean) Enable the pg_stat_monitor extension. Enabling this extension will cause the cluster to be restarted.When this extension is enabled, pg_stat_statements results for utility commands are unreliable. The default value is false.
            pg_stat_statements__dot__track: (String) Controls which statements are counted. Specify top to track top-level statements (those issued directly by clients), all to also track nested statements (such as statements invoked within functions), or none to disable statement statistics collection. The default value is top.
            pg_user_config: '(Block List, Max: 1) Pg user configurable settings (see below for nested schema)'
            pg_version: (String) PostgreSQL major version.
            pgbouncer: '(Block List, Max: 1) PGBouncer connection pooling settings. (see below for nested schema)'
            pglookout: '(Block List, Max: 1) PGLookout settings. (see below for nested schema)'
            plan: (String) Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are hobbyist, startup-x, business-x and premium-x where x is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the Aiven pricing page.
            port: (Number) PostgreSQL port
            private_access: '(Block List, Max: 1) Allow access to selected service ports from private networks. (see below for nested schema)'
            privatelink_access: '(Block List, Max: 1) Allow access to selected service components through Privatelink. (see below for nested schema)'
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            project_to_fork_from: (String) Name of another project to fork a service from. This has effect only when a new service is being created.
            project_vpc_id: (String) Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
            prometheus: (Boolean) Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
            public_access: '(Block List, Max: 1) Allow access to selected service ports from the public Internet. (see below for nested schema)'
            read: (String)
            recovery_target_time: (String) Recovery target time when forking a service. This has effect only when a new service is being created.
            replica_uri: (String, Sensitive) PostgreSQL replica URI for services with a replica
            route: (String)
            server_idle_timeout: (Number) If a server connection has been idle more than this many seconds it will be dropped. If 0 then timeout is disabled. (seconds).
            server_lifetime: (Number) The pooler will close an unused server connection that has been connected longer than this. (seconds).
            server_reset_query_always: (Boolean) Run server_reset_query (DISCARD ALL) in all pooling modes.
            service_host: (String) The hostname of the service.
            service_integrations: (Block List) Service integrations to specify when creating a service. Not applied after initial service creation (see below for nested schema)
            service_name: (String) Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
            service_password: (String, Sensitive) Password used for connecting to the service, if applicable
            service_port: (Number) The port of the service
            service_to_fork_from: (String) Name of another service to fork from. This has effect only when a new service is being created.
            service_type: (String) Aiven internal service type code
            service_uri: (String, Sensitive) URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
            service_username: (String) Username used for connecting to the service, if applicable
            shared_buffers_percentage: (Number) Percentage of total RAM that the database server uses for shared memory buffers. Valid range is 20-60 (float), which corresponds to 20% - 60%. This setting adjusts the shared_buffers configuration value.
            source_service_name: (String) Name of the source service
            ssl: (Boolean) The server where to migrate data from is secured with SSL. The default value is true.
            sslmode: (String) PostgreSQL sslmode setting (currently always "require")
            state: (String) Service state. One of POWEROFF, REBALANCING, REBUILDING or RUNNING
            static_ips: (Set of String) Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
            synchronous_replication: (String) Synchronous replication type. Note that the service plan also needs to support synchronous replication.
            tag: (Block Set) Tags are key-value pairs that allow you to categorize services. (see below for nested schema)
            temp_file_limit: (Number) PostgreSQL temporary file limit in KiB, -1 for unlimited.
            termination_protection: (Boolean) Prevents the service from being deleted. It is recommended to set this to true for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
            timeouts: (Block, Optional) (see below for nested schema)
            timescaledb: '(Block List, Max: 1) TimescaleDB extension configuration values. (see below for nested schema)'
            timezone: (String) PostgreSQL service timezone.
            track_activity_query_size: (Number) Specifies the number of bytes reserved to track the currently executing command for each active session.
            track_commit_timestamp: (String) Record commit time of transactions.
            track_functions: (String) Enables tracking of function call counts and time used.
            track_io_timing: (String) Enables timing of database I/O calls. This parameter is off by default, because it will repeatedly query the operating system for the current time, which may cause significant overhead on some platforms.
            update: (String)
            uri: (String, Sensitive) PostgreSQL master connection URI
            usage: (String)
            user: (String) PostgreSQL admin user name
            username: (String) User name for authentication with the server where to migrate data from.
            value: (String) Service tag value
            variant: (String) Variant of the PostgreSQL service, may affect the features that are exposed by default.
            wal_sender_timeout: (Number) Terminate replication connections that are inactive for longer than this amount of time, in milliseconds. Setting this value to zero disables the timeout.
            wal_writer_delay: (Number) WAL flush interval in milliseconds. Note that setting this value to lower than the default 200ms may negatively impact performance.
            work_mem: (Number) Sets the maximum amount of memory to be used by a query operation (such as a sort or hash table) before writing to temporary disk files, in MB. Default is 1MB + 0.075% of total RAM (up to 32MB).
        importStatements:
            - terraform import aiven_pg.pg project/service_name
    aiven_pg_database Resource - terraform-provider-aiven:
        subCategory: ""
        description: The PG Database resource allows the creation and management of Aiven PostgreSQL Databases.
        name: aiven_pg_database Resource - terraform-provider-aiven
        title: aiven_pg_database Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            database_name: (String) The name of the service database. This property cannot be changed, doing so forces recreation of the resource.
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            lc_collate: (String) Default string sort order (LC_COLLATE) of the database. The default value is en_US.UTF-8. This property cannot be changed, doing so forces recreation of the resource.
            lc_ctype: (String) Default character classification (LC_CTYPE) of the database. The default value is en_US.UTF-8. This property cannot be changed, doing so forces recreation of the resource.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            termination_protection: (Boolean) It is a Terraform client-side deletion protections, which prevents the database from being deleted by Terraform. It is recommended to enable this for any production databases containing critical data. The default value is false.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - terraform import aiven_pg_database.mydatabase project/service_name/database_name
    aiven_pg_user Resource - terraform-provider-aiven:
        subCategory: ""
        description: The PG User resource allows the creation and management of Aiven PG Users.
        name: aiven_pg_user Resource - terraform-provider-aiven
        title: aiven_pg_user Resource - terraform-provider-aiven
        argumentDocs:
            access_cert: (String, Sensitive) Access certificate for the user
            access_key: (String, Sensitive) Access certificate key for the user
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            password: (String, Sensitive) The password of the PG User (not applicable for all services).
            pg_allow_replication: (Boolean) Defines whether replication is allowed.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of the user account. Tells whether the user is the primary account or a regular account.
            update: (String)
            username: (String) The actual name of the PG User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        importStatements:
            - terraform import aiven_pg_user.user project/service_name/username
    aiven_project Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Project resource allows the creation and management of Aiven Projects.
        name: aiven_project Resource - terraform-provider-aiven
        title: aiven_project Resource - terraform-provider-aiven
        argumentDocs:
            account_id: (String, Deprecated) An optional property to link a project to an already existing account by using account ID. To set up proper dependencies please refer to this variable as a reference.
            add_account_owners_admin_access: (Boolean, Deprecated) If parent_id is set, grant account owner team admin access to the new project. The default value is true.
            available_credits: (String) The amount of platform credits available to the project. This could be your free trial or other promotional credits.
            billing_group: (String) The id of the billing group that is linked to this project. To set up proper dependencies please refer to this variable as a reference.
            ca_cert: (String, Sensitive) The CA certificate of the project. This is required for configuring clients that connect to certain services like Kafka.
            copy_from_project: (String) is the name of another project used to copy billing information and some other project attributes like technical contacts from. This is mostly relevant when an existing project has billing type set to invoice and that needs to be copied over to a new project. (Setting billing is otherwise not allowed over the API.) This only has effect when the project is created. To set up proper dependencies please refer to this variable as a reference.
            create: (String)
            default: (String)
            default_cloud: (String) Defines the default cloud provider and region where services are hosted. This can be changed freely after the project is created. This will not affect existing services.
            delete: (String)
            estimated_balance: (String) The current accumulated bill for this project in the current billing period.
            id: (String) The ID of this resource.
            key: (String) Project tag key
            parent_id: (String) An optional property to link a project to an already existing organization or account by using its ID. To set up proper dependencies please refer to this variable as a reference.
            payment_method: (String) The method of invoicing used for payments for this project, e.g. card.
            project: (String) Defines the name of the project. Name must be globally unique (between all Aiven customers) and cannot be changed later without destroying and re-creating the project, including all sub-resources.
            read: (String)
            tag: (Block Set) Tags are key-value pairs that allow you to categorize projects. (see below for nested schema)
            technical_emails: (Set of String) Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability. It is  good practice to keep this up-to-date to be aware of any potential issues with your project.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            use_source_project_billing_group: (Boolean, Deprecated) Use the same billing group that is used in source project.
            value: (String) Project tag value
        importStatements:
            - terraform import aiven_project.myproject project
    aiven_project_user Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Project User resource allows the creation and management of Aiven Project Users.
        name: aiven_project_user Resource - terraform-provider-aiven
        title: aiven_project_user Resource - terraform-provider-aiven
        argumentDocs:
            accepted: (Boolean) Whether the user has accepted the request to join the project; adding user to a project sends an invitation to the target user and the actual membership is only created once the user accepts the invitation.
            create: (String)
            default: (String)
            delete: (String)
            email: (String) Email address of the user. This property cannot be changed, doing so forces recreation of the resource.
            id: (String) The ID of this resource.
            member_type: (String) Project membership type. The possible values are admin, developer and operator.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - terraform import aiven_project_user.mytestuser project/email
    aiven_project_vpc Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Project VPC resource allows the creation and management of Aiven Project VPCs.
        name: aiven_project_vpc Resource - terraform-provider-aiven
        title: aiven_project_vpc Resource - terraform-provider-aiven
        argumentDocs:
            cloud_name: (String) Defines where the cloud provider and region where the service is hosted in. See the Service resource for additional information. This property cannot be changed, doing so forces recreation of the resource.
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            network_cidr: (String) Network address range used by the VPC like 192.168.0.0/24
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            state: (String) State of the VPC. The possible values are APPROVED, ACTIVE, DELETING and DELETED.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements:
            - terraform import aiven_project_vpc.myvpc project/id
    aiven_redis Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Redis resource allows the creation and management of Aiven Redis services.
        name: aiven_redis Resource - terraform-provider-aiven
        title: aiven_redis Resource - terraform-provider-aiven
        argumentDocs:
            additional_backup_regions: (List of String) Additional Cloud Regions for Backup Replication.
            additional_disk_space: (String) Additional disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            cloud_name: (String) Defines where the cloud provider and region where the service is hosted in. This can be changed freely after service is created. Changing the value will trigger a potentially lengthy migration process for the service. Format is cloud provider name (aws, azure, do google, upcloud, etc.), dash, and the cloud provider specific region name. These are documented on each Cloud provider's own support articles, like here for Google and here for AWS.
            component: (String)
            components: (List of Object) Service component information objects (see below for nested schema)
            create: (String)
            dbname: (String) Database name for bootstrapping the initial connection.
            default: (String)
            delete: (String)
            description: (String) Description for IP filter list entry.
            disk_space: (String, Deprecated) Service disk space. Possible values depend on the service type, the cloud provider and the project. Therefore, reducing will result in the service rebalancing.
            disk_space_cap: (String) The maximum disk space of the service, possible values depend on the service type, the cloud provider and the project.
            disk_space_default: (String) The default disk space of the service, possible values depend on the service type, the cloud provider and the project. Its also the minimum value for disk_space
            disk_space_step: (String) The default disk space step of the service, possible values depend on the service type, the cloud provider and the project. disk_space needs to increment from disk_space_default by increments of this size.
            disk_space_used: (String) Disk space that service is currently using
            host: (String) Hostname or IP address of the server where to migrate data from.
            id: (String) The ID of this resource.
            ignore_dbs: (String) Comma-separated list of databases, which should be ignored during migration (supported by MySQL and PostgreSQL only at the moment).
            integration_type: (String) Type of the service integration. The only supported value at the moment is read_replica
            ip_filter: (List of String, Deprecated) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            ip_filter_object: '(Block List, Max: 1024) Allow incoming connections from CIDR address block, e.g. ''10.20.0.0/16''. (see below for nested schema)'
            ip_filter_string: (List of String) Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'.
            kafka_authentication_method: (String)
            key: (String) Service tag key
            maintenance_window_dow: (String) Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.
            maintenance_window_time: (String) Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.
            method: (String) The migration method to be used (currently supported only by Redis, MySQL and PostgreSQL service types).
            migration: '(Block List, Max: 1) Migrate data from existing server. (see below for nested schema)'
            network: (String) CIDR address block.
            password: (String, Sensitive) Password for authentication with the server where to migrate data from.
            plan: (String) Defines what kind of computing resources are allocated for the service. It can be changed after creation, though there are some restrictions when going to a smaller plan such as the new plan must have sufficient amount of disk space to store all current data and switching to a plan with fewer nodes might not be supported. The basic plan names are hobbyist, startup-x, business-x and premium-x where x is (roughly) the amount of memory on each node (also other attributes like number of CPUs and amount of disk space varies but naming is based on memory). The available options can be seem from the Aiven pricing page.
            port: (Number) Port number of the server where to migrate data from.
            private_access: '(Block List, Max: 1) Allow access to selected service ports from private networks. (see below for nested schema)'
            privatelink_access: '(Block List, Max: 1) Allow access to selected service components through Privatelink. (see below for nested schema)'
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            project_to_fork_from: (String) Name of another project to fork a service from. This has effect only when a new service is being created.
            project_vpc_id: (String) Specifies the VPC the service should run in. If the value is not set the service is not run inside a VPC. When set, the value should be given as a reference to set up dependencies correctly and the VPC must be in the same cloud and region as the service itself. Project can be freely moved to and from VPC after creation but doing so triggers migration to new servers so the operation can take significant amount of time to complete if the service has a lot of data.
            prometheus: (Boolean) Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations.
            public_access: '(Block List, Max: 1) Allow access to selected service ports from the public Internet. (see below for nested schema)'
            read: (String)
            recovery_basebackup_name: (String) Name of the basebackup to restore in forked service.
            redis: (List of Object) Redis server provided values (see below for nested schema)
            redis_acl_channels_default: (String) Determines default pub/sub channels' ACL for new users if ACL is not supplied. When this option is not defined, all_channels is assumed to keep backward compatibility. This option doesn't affect Redis configuration acl-pubsub-default.
            redis_io_threads: (Number) Set Redis IO thread count. Changing this will cause a restart of the Redis service.
            redis_lfu_decay_time: (Number) LFU maxmemory-policy counter decay time in minutes. The default value is 1.
            redis_lfu_log_factor: (Number) Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies. The default value is 10.
            redis_maxmemory_policy: (String) Redis maxmemory-policy. The default value is noeviction.
            redis_notify_keyspace_events: (String) Set notify-keyspace-events option.
            redis_number_of_databases: (Number) Set number of Redis databases. Changing this will cause a restart of the Redis service.
            redis_persistence: (String) When persistence is 'rdb', Redis does RDB dumps each 10 minutes if any key is changed. Also RDB dumps are done according to backup schedule for backup purposes. When persistence is 'off', no RDB dumps and backups are done, so data can be lost at any moment if service is restarted for any reason, or if service is powered off. Also service can't be forked.
            redis_pubsub_client_output_buffer_limit: (Number) Set output buffer limit for pub / sub clients in MB. The value is the hard limit, the soft limit is 1/4 of the hard limit. When setting the limit, be mindful of the available memory in the selected service plan.
            redis_ssl: (Boolean) Require SSL to access Redis. The default value is true.
            redis_timeout: (Number) Redis idle connection timeout in seconds. The default value is 300.
            redis_user_config: '(Block List, Max: 1) Redis user configurable settings (see below for nested schema)'
            route: (String)
            service_host: (String) The hostname of the service.
            service_integrations: (Block List) Service integrations to specify when creating a service. Not applied after initial service creation (see below for nested schema)
            service_name: (String) Specifies the actual name of the service. The name cannot be changed later without destroying and re-creating the service so name should be picked based on intended service usage rather than current attributes.
            service_password: (String, Sensitive) Password used for connecting to the service, if applicable
            service_port: (Number) The port of the service
            service_to_fork_from: (String) Name of another service to fork from. This has effect only when a new service is being created.
            service_type: (String) Aiven internal service type code
            service_uri: (String, Sensitive) URI for connecting to the service. Service specific info is under "kafka", "pg", etc.
            service_username: (String) Username used for connecting to the service, if applicable
            source_service_name: (String) Name of the source service
            ssl: (Boolean) The server where to migrate data from is secured with SSL. The default value is true.
            state: (String) Service state. One of POWEROFF, REBALANCING, REBUILDING or RUNNING
            static_ips: (Set of String) Static IPs that are going to be associated with this service. Please assign a value using the 'toset' function. Once a static ip resource is in the 'assigned' state it cannot be unbound from the node again
            tag: (Block Set) Tags are key-value pairs that allow you to categorize services. (see below for nested schema)
            termination_protection: (Boolean) Prevents the service from being deleted. It is recommended to set this to true for all production services to prevent unintentional service deletion. This does not shield against deleting databases or topics but for services with backups much of the content can at least be restored from backup in case accidental deletion is done.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            usage: (String)
            username: (String) User name for authentication with the server where to migrate data from.
            value: (String) Service tag value
        importStatements:
            - terraform import aiven_redis.redis1 project/service_name
    aiven_redis_user Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Redis User resource allows the creation and management of Aiven Redis Users.
        name: aiven_redis_user Resource - terraform-provider-aiven
        title: aiven_redis_user Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            password: (String, Sensitive) The password of the Redis User.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            redis_acl_categories: (List of String) Defines command category rules. The field is required withredis_acl_commands and redis_acl_keys. This property cannot be changed, doing so forces recreation of the resource.
            redis_acl_channels: (List of String) Defines the permitted pub/sub channel patterns. This property cannot be changed, doing so forces recreation of the resource.
            redis_acl_commands: (List of String) Defines rules for individual commands. The field is required withredis_acl_categories and redis_acl_keys. This property cannot be changed, doing so forces recreation of the resource.
            redis_acl_keys: (List of String) Defines key access rules. The field is required withredis_acl_categories and redis_acl_keys. This property cannot be changed, doing so forces recreation of the resource.
            service_name: (String) Specifies the name of the service that this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            timeouts: (Block, Optional) (see below for nested schema)
            type: (String) Type of the user account. Tells whether the user is the primary account or a regular account.
            update: (String)
            username: (String) The actual name of the Redis User. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        importStatements:
            - terraform import aiven_redis_user.foo project/service_name/username
    aiven_service_integration Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Service Integration resource allows the creation and management of Aiven Service Integrations.
        name: aiven_service_integration Resource - terraform-provider-aiven
        title: aiven_service_integration Resource - terraform-provider-aiven
        argumentDocs:
            auto_offset_reset: (String) Action to take when there is no initial offset in offset store or the desired offset is out of range. The default value is earliest.
            clickhouse_kafka_user_config: '(Block List, Max: 1) ClickhouseKafka user configurable settings (see below for nested schema)'
            clickhouse_postgresql_user_config: '(Block List, Max: 1) ClickhousePostgresql user configurable settings (see below for nested schema)'
            cluster_alias: '(String) The alias under which the Kafka cluster is known to MirrorMaker. Can contain the following symbols: ASCII alphanumerics, ''.'', ''_'', and ''-''.'
            columns: '(Block List, Max: 100) Table columns. (see below for nested schema)'
            command_stats_enabled: (Boolean) Enable command_stats option in the agent's configuration. The default value is false.
            comment: (String) Optional tag explanation.
            config_storage_topic: (String) The name of the topic where connector and task configuration data are stored.This must be the same for all workers with the same group_id.
            consumer_fetch_min_bytes: (Number) The minimum amount of data the server should return for a fetch request.
            create: (String)
            data_format: (String) Message data format. The default value is JSONEachRow.
            database: (String) PostgreSQL database to expose. The default value is defaultdb.
            databases: '(Block List, Max: 10) Databases to expose. (see below for nested schema)'
            datadog_dbm_enabled: (Boolean) Enable Datadog Database Monitoring.
            datadog_tags: '(Block List, Max: 32) Custom tags provided by user. (see below for nested schema)'
            datadog_user_config: '(Block List, Max: 1) Datadog user configurable settings (see below for nested schema)'
            date_time_input_format: (String) Method to read DateTime from text input formats. The default value is basic.
            default: (String)
            delete: (String)
            destination_endpoint_id: (String) Destination endpoint for the integration (if any)
            destination_service_name: (String) Destination service for the integration (if any)
            dropped_metrics: '(Block List, Max: 1024) Metrics to not send to AWS CloudWatch (takes precedence over extra_metrics). (see below for nested schema)'
            elasticsearch_index_days_max: (Number) Elasticsearch index retention limit. The default value is 3.
            elasticsearch_index_prefix: (String) Elasticsearch index prefix. The default value is logs.
            exclude_consumer_groups: (List of String) List of custom metrics.
            exclude_topics: (List of String) List of topics to exclude.
            external_aws_cloudwatch_metrics_user_config: '(Block List, Max: 1) ExternalAwsCloudwatchMetrics user configurable settings (see below for nested schema)'
            extra_metrics: '(Block List, Max: 1024) Metrics to allow through to AWS CloudWatch (in addition to default metrics). (see below for nested schema)'
            field: (String) Identifier of a value in the metric.
            gather_event_waits: (Boolean) Gather metrics from PERFORMANCE_SCHEMA.EVENT_WAITS.
            gather_file_events_stats: (Boolean) gather metrics from PERFORMANCE_SCHEMA.FILE_SUMMARY_BY_EVENT_NAME.
            gather_index_io_waits: (Boolean) Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_INDEX_USAGE.
            gather_info_schema_auto_inc: (Boolean) Gather auto_increment columns and max values from information schema.
            gather_innodb_metrics: (Boolean) Gather metrics from INFORMATION_SCHEMA.INNODB_METRICS.
            gather_perf_events_statements: (Boolean) Gather metrics from PERFORMANCE_SCHEMA.EVENTS_STATEMENTS_SUMMARY_BY_DIGEST.
            gather_process_list: (Boolean) Gather thread state counts from INFORMATION_SCHEMA.PROCESSLIST.
            gather_slave_status: (Boolean) Gather metrics from SHOW SLAVE STATUS command output.
            gather_table_io_waits: (Boolean) Gather metrics from PERFORMANCE_SCHEMA.TABLE_IO_WAITS_SUMMARY_BY_TABLE.
            gather_table_lock_waits: (Boolean) Gather metrics from PERFORMANCE_SCHEMA.TABLE_LOCK_WAITS.
            gather_table_schema: (Boolean) Gather metrics from INFORMATION_SCHEMA.TABLES.
            group_id: (String) A unique string that identifies the Connect cluster group this worker belongs to.
            group_name: (String) Kafka consumers group. The default value is clickhouse.
            handle_error_mode: (String) How to handle errors for Kafka engine. The default value is default.
            id: (String) The ID of this resource.
            include_consumer_groups: (List of String) List of custom metrics.
            include_topics: (List of String) List of topics to include.
            index_stats_enabled: (Boolean) Enable Datadog Opensearch Index Monitoring.
            integration_id: (String) Service Integration Id at aiven
            integration_type: '(String) Type of the service integration. Possible values: alertmanager, cassandra_cross_service_cluster, clickhouse_kafka, clickhouse_postgresql, dashboard, datadog, datasource, external_aws_cloudwatch_logs, external_aws_cloudwatch_metrics, external_elasticsearch_logs, external_google_cloud_logging, external_opensearch_logs, flink, internal_connectivity, jolokia, kafka_connect, kafka_logs, kafka_mirrormaker, logs, m3aggregator, m3coordinator, metrics, opensearch_cross_cluster_replication, opensearch_cross_cluster_search, prometheus, read_replica, rsyslog, schema_registry_proxy'
            kafka_connect: '(Block List, Max: 1) Kafka Connect service configuration values. (see below for nested schema)'
            kafka_connect_user_config: '(Block List, Max: 1) KafkaConnect user configurable settings (see below for nested schema)'
            kafka_custom_metrics: (List of String) List of custom metrics.
            kafka_logs_user_config: '(Block List, Max: 1) KafkaLogs user configurable settings (see below for nested schema)'
            kafka_mirrormaker: '(Block List, Max: 1) Kafka MirrorMaker configuration values. (see below for nested schema)'
            kafka_mirrormaker_user_config: '(Block List, Max: 1) KafkaMirrormaker user configurable settings (see below for nested schema)'
            kafka_topic: (String) Topic name.
            logs_user_config: '(Block List, Max: 1) Logs user configurable settings (see below for nested schema)'
            max_block_size: (Number) Number of row collected by poll(s) for flushing data from Kafka. The default value is 0.
            max_jmx_metrics: (Number) Maximum number of JMX metrics to send.
            max_rows_per_message: (Number) The maximum number of rows produced in one kafka message for row-based formats. The default value is 1.
            metric: (String) Identifier of the metric.
            metrics_user_config: '(Block List, Max: 1) Metrics user configurable settings (see below for nested schema)'
            name: (String) Name of the table.
            num_consumers: (Number) The number of consumers per table per replica. The default value is 1.
            offset_storage_topic: (String) The name of the topic where connector and task configuration offsets are stored.This must be the same for all workers with the same group_id.
            opensearch: '(Block List, Max: 1) Datadog Opensearch Options. (see below for nested schema)'
            pending_task_stats_enabled: (Boolean) Enable Datadog Opensearch Pending Task Monitoring.
            perf_events_statements_digest_text_limit: (Number) Truncates digest text from perf_events_statements into this many characters.
            perf_events_statements_limit: (Number) Limits metrics from perf_events_statements.
            perf_events_statements_time_limit: (Number) Only include perf_events_statements whose last seen is less than this many seconds.
            poll_max_batch_size: (Number) Maximum amount of messages to be polled in a single Kafka poll. The default value is 0.
            producer_batch_size: (Number) The batch size in bytes producer will attempt to collect before publishing to broker.
            producer_buffer_memory: (Number) The amount of bytes producer can use for buffering data before publishing to broker.
            producer_compression_type: (String) Specify the default compression type for producers. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'none' which is the default and equivalent to no compression.
            producer_linger_ms: (Number) The linger time (ms) for waiting new data to arrive for publishing.
            producer_max_request_size: (Number) The maximum request size in bytes.
            project: (String) Project the integration belongs to
            pshard_stats_enabled: (Boolean) Enable Datadog Opensearch Primary Shard Monitoring.
            read: (String)
            redis: '(Block List, Max: 1) Datadog Redis Options. (see below for nested schema)'
            retention_days: (Number) Number of days to keep old metrics. Only affects PostgreSQL destinations. Set to 0 for no automatic cleanup. Defaults to 30 days.
            ro_username: (String) Name of a user that can be used to read metrics. This will be used for Grafana integration (if enabled) to prevent Grafana users from making undesired changes. Only affects PostgreSQL destinations. Defaults to 'metrics_reader'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.
            schema: (String) PostgreSQL schema to expose. The default value is public.
            selected_log_fields: (List of String) The list of logging fields that will be sent to the integration logging service. The MESSAGE and timestamp fields are always sent.
            skip_broken_messages: (Number) Skip at least this number of broken messages from Kafka topic per block. The default value is 0.
            source_endpoint_id: (String) Source endpoint for the integration (if any)
            source_mysql: '(Block List, Max: 1) Configuration options for metrics where source service is MySQL. (see below for nested schema)'
            source_service_name: (String) Source service for the integration (if any)
            status_storage_topic: (String) The name of the topic where connector and task configuration status updates are stored.This must be the same for all workers with the same group_id.
            tables: '(Block List, Max: 100) Tables to create. (see below for nested schema)'
            tag: '(String) Tag format and usage are described here: https://docs.datadoghq.com/getting_started/tagging. Tags with prefix ''aiven-'' are reserved for Aiven.'
            telegraf: '(Block List, Max: 1) Configuration options for Telegraf MySQL input plugin. (see below for nested schema)'
            timeouts: (Block, Optional) (see below for nested schema)
            topics: '(Block List, Max: 100) Kafka topics. (see below for nested schema)'
            type: (String) Column type.
            update: (String)
            username: (String) Name of the user used to write metrics. Only affects PostgreSQL destinations. Defaults to 'metrics_writer'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.
        importStatements:
            - terraform import aiven_service_integration.myintegration project/integration_id
    aiven_service_integration_endpoint Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Service Integration Endpoint resource allows the creation and management of Aiven Service Integration Endpoints.
        name: aiven_service_integration_endpoint Resource - terraform-provider-aiven
        title: aiven_service_integration_endpoint Resource - terraform-provider-aiven
        argumentDocs:
            access_key: (String) AWS access key. Required permissions are logs:CreateLogGroup, logs:CreateLogStream, logs:PutLogEvents and logs:DescribeLogStreams.
            authentication: (String) Authentication method.
            basic_auth_password: (String, Sensitive) Basic authentication password.
            basic_auth_username: (String) Basic authentication user name.
            bootstrap_servers: (String) Bootstrap servers.
            ca: (String) PEM encoded CA certificate.
            cert: (String) PEM encoded client certificate.
            comment: (String) Optional tag explanation.
            create: (String)
            datadog_api_key: (String, Sensitive) Datadog API key.
            datadog_tags: '(Block List, Max: 32) Custom tags provided by user. (see below for nested schema)'
            datadog_user_config: '(Block List, Max: 1) Datadog user configurable settings (see below for nested schema)'
            default: (String)
            delete: (String)
            disable_consumer_stats: (Boolean) Disable consumer group metrics.
            endpoint_config: (Map of String) Integration endpoint specific backend configuration
            endpoint_name: (String) Name of the service integration endpoint
            endpoint_type: '(String) Type of the service integration endpoint. Possible values: datadog, prometheus, rsyslog, external_elasticsearch_logs, external_opensearch_logs, external_aws_cloudwatch_logs, external_google_cloud_logging, external_kafka, jolokia, external_schema_registry, external_aws_cloudwatch_metrics'
            external_aws_cloudwatch_logs_user_config: '(Block List, Max: 1) ExternalAwsCloudwatchLogs user configurable settings (see below for nested schema)'
            external_aws_cloudwatch_metrics_user_config: '(Block List, Max: 1) ExternalAwsCloudwatchMetrics user configurable settings (see below for nested schema)'
            external_elasticsearch_logs_user_config: '(Block List, Max: 1) ExternalElasticsearchLogs user configurable settings (see below for nested schema)'
            external_google_cloud_logging_user_config: '(Block List, Max: 1) ExternalGoogleCloudLogging user configurable settings (see below for nested schema)'
            external_kafka_user_config: '(Block List, Max: 1) ExternalKafka user configurable settings (see below for nested schema)'
            external_opensearch_logs_user_config: '(Block List, Max: 1) ExternalOpensearchLogs user configurable settings (see below for nested schema)'
            external_schema_registry_user_config: '(Block List, Max: 1) ExternalSchemaRegistry user configurable settings (see below for nested schema)'
            format: (String) message format. The default value is rfc5424.
            id: (String) The ID of this resource.
            index_days_max: (Number) Maximum number of days of logs to keep. The default value is 3.
            index_prefix: (String) Elasticsearch index prefix. The default value is logs.
            jolokia_user_config: '(Block List, Max: 1) Jolokia user configurable settings (see below for nested schema)'
            kafka_consumer_check_instances: (Number) Number of separate instances to fetch kafka consumer statistics with.
            kafka_consumer_stats_timeout: (Number) Number of seconds that datadog will wait to get consumer statistics from brokers.
            key: (String) PEM encoded client key.
            log_group_name: (String) AWS CloudWatch log group name.
            log_id: (String) Google Cloud Logging log id.
            logline: (String) custom syslog message format.
            max_partition_contexts: (Number) Maximum number of partition contexts to send.
            namespace: (String) AWS CloudWatch Metrics Namespace.
            port: (Number) rsyslog server port. The default value is 514.
            project: (String) Project the service integration endpoint belongs to
            project_id: (String) GCP project id.
            prometheus_user_config: '(Block List, Max: 1) Prometheus user configurable settings (see below for nested schema)'
            read: (String)
            region: (String) AWS region.
            rsyslog_user_config: '(Block List, Max: 1) Rsyslog user configurable settings (see below for nested schema)'
            sasl_mechanism: (String) SASL mechanism used for connections to the Kafka server.
            sasl_plain_password: (String, Sensitive) Password for SASL PLAIN mechanism in the Kafka server.
            sasl_plain_username: (String) Username for SASL PLAIN mechanism in the Kafka server.
            sd: (String) Structured data block for log message.
            secret_key: (String) AWS secret key.
            security_protocol: (String) Security protocol.
            server: (String) rsyslog server IP address or hostname.
            service_account_credentials: (String) This is a JSON object with the fields documented in https://cloud.google.com/iam/docs/creating-managing-service-account-keys .
            site: (String) Datadog intake site. Defaults to datadoghq.com.
            ssl_ca_cert: (String) PEM-encoded CA certificate.
            ssl_client_cert: (String) PEM-encoded client certificate.
            ssl_client_key: (String) PEM-encoded client key.
            ssl_endpoint_identification_algorithm: (String) The endpoint identification algorithm to validate server hostname using server certificate.
            tag: '(String) Tag format and usage are described here: https://docs.datadoghq.com/getting_started/tagging. Tags with prefix ''aiven-'' are reserved for Aiven.'
            timeout: (Number) Elasticsearch request timeout limit. The default value is 10.0.
            timeouts: (Block, Optional) (see below for nested schema)
            tls: (Boolean) Require TLS. The default value is true.
            update: (String)
            url: (String) Elasticsearch connection URL.
        importStatements: []
    aiven_static_ip Resource - terraform-provider-aiven:
        subCategory: ""
        description: The aivenstaticip resource allows the creation and deletion of static ips. Please not that once a static ip is in the 'assigned' state it is bound to the node it is assigned to and cannot be deleted or disassociated until the node is recycled. Plans that would delete static ips that are in the assigned state will be blocked.
        name: aiven_static_ip Resource - terraform-provider-aiven
        title: aiven_static_ip Resource - terraform-provider-aiven
        argumentDocs:
            cloud_name: (String) Specifies the cloud that the static ip belongs to. This property cannot be changed, doing so forces recreation of the resource.
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            ip_address: (String) The address of the static ip.
            project: (String) Identifies the project this resource belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
            read: (String)
            service_name: (String) The service name the static ip is associated with.
            state: (String) The state the static ip is in.
            static_ip_address_id: (String) The static ip id of the resource. Should be used as a reference elsewhere.
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
        importStatements: []
    aiven_transit_gateway_vpc_attachment Resource - terraform-provider-aiven:
        subCategory: ""
        description: The Transit Gateway VPC Attachment resource allows the creation and management Transit Gateway VPC Attachment VPC peering connection between Aiven and AWS.
        name: aiven_transit_gateway_vpc_attachment Resource - terraform-provider-aiven
        title: aiven_transit_gateway_vpc_attachment Resource - terraform-provider-aiven
        argumentDocs:
            create: (String)
            default: (String)
            delete: (String)
            id: (String) The ID of this resource.
            peer_cloud_account: (String) AWS account ID or GCP project ID of the peered VPC. This property cannot be changed, doing so forces recreation of the resource.
            peer_region: (String, Deprecated) AWS region of the peered VPC (if not in the same region as Aiven VPC)
            peer_vpc: (String) Transit gateway ID. This property cannot be changed, doing so forces recreation of the resource.
            peering_connection_id: (String) Cloud provider identifier for the peering connection if available
            read: (String)
            state: (String) State of the peering connection
            state_info: (Map of String) State-specific help or error information
            timeouts: (Block, Optional) (see below for nested schema)
            update: (String)
            user_peer_network_cidrs: (Set of String) List of private IPv4 ranges to route through the peering connection
            vpc_id: (String) The VPC the peering connection belongs to. To set up proper dependencies please refer to this variable as a reference. This property cannot be changed, doing so forces recreation of the resource.
        importStatements:
            - terraform import aiven_transit_gateway_vpc_attachment.attachment project/vpc_id/peer_cloud_account/peer_vpc/peer_region
