---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: services.postgres.aiven.crossplane.io
spec:
  group: postgres.aiven.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - aiven
    kind: Service
    listKind: ServiceList
    plural: services
    singular: service
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Service is the Schema for the Services API. <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceSpec defines the desired state of Service
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  additionalDiskSpace:
                    description: Additional disk space. Possible values depend on
                      the service type, the cloud provider and the project. Therefore,
                      reducing will result in the service rebalancing.
                    type: string
                  cloudName:
                    description: Defines where the cloud provider and region where
                      the service is hosted in. This can be changed freely after service
                      is created. Changing the value will trigger a potentially lengthy
                      migration process for the service. Format is cloud provider
                      name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash,
                      and the cloud provider specific region name. These are documented
                      on each Cloud provider's own support articles, like [here for
                      Google](https://cloud.google.com/compute/docs/regions-zones/)
                      and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).
                    type: string
                  diskSpace:
                    description: Service disk space. Possible values depend on the
                      service type, the cloud provider and the project. Therefore,
                      reducing will result in the service rebalancing.
                    type: string
                  maintenanceWindowDow:
                    description: Day of week when maintenance operations should be
                      performed. One monday, tuesday, wednesday, etc.
                    type: string
                  maintenanceWindowTime:
                    description: Time of day when maintenance operations should be
                      performed. UTC time in HH:mm:ss format.
                    type: string
                  pg:
                    description: PostgreSQL specific server provided values
                    items:
                      properties:
                        uriSecretRef:
                          description: PostgreSQL master connection URI
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  pgUserConfig:
                    description: Pg user configurable settings
                    items:
                      properties:
                        additionalBackupRegions:
                          description: Additional Cloud Regions for Backup Replication.
                          items:
                            type: string
                          type: array
                        adminPasswordSecretRef:
                          description: Custom password for admin user. Defaults to
                            random string. This must be set only when a new service
                            is being created.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        adminUsername:
                          description: Custom username for admin user. This must be
                            set only when a new service is being created.
                          type: string
                        backupHour:
                          description: The hour of day (in UTC) when backup for the
                            service is started. New backup is only started if previous
                            backup has already completed.
                          type: number
                        backupMinute:
                          description: The minute of an hour when backup for the service
                            is started. New backup is only started if previous backup
                            has already completed.
                          type: number
                        enableIpv6:
                          description: Register AAAA DNS records for the service,
                            and allow IPv6 packets to service ports.
                          type: boolean
                        ipFilter:
                          description: Allow incoming connections from CIDR address
                            block, e.g. '10.20.0.0/16'.
                          items:
                            type: string
                          type: array
                        ipFilterObject:
                          description: Allow incoming connections from CIDR address
                            block, e.g. '10.20.0.0/16'.
                          items:
                            properties:
                              description:
                                description: Description for IP filter list entry.
                                type: string
                              network:
                                description: CIDR address block.
                                type: string
                            required:
                            - network
                            type: object
                          type: array
                        ipFilterString:
                          description: Allow incoming connections from CIDR address
                            block, e.g. '10.20.0.0/16'.
                          items:
                            type: string
                          type: array
                        migration:
                          description: Migrate data from existing server.
                          items:
                            properties:
                              dbname:
                                description: Database name for bootstrapping the initial
                                  connection.
                                type: string
                              host:
                                description: Hostname or IP address of the server
                                  where to migrate data from.
                                type: string
                              ignoreDbs:
                                description: Comma-separated list of databases, which
                                  should be ignored during migration (supported by
                                  MySQL and PostgreSQL only at the moment).
                                type: string
                              method:
                                description: The migration method to be used (currently
                                  supported only by Redis, MySQL and PostgreSQL service
                                  types).
                                type: string
                              passwordSecretRef:
                                description: Password for authentication with the
                                  server where to migrate data from.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: Name of the secret.
                                    type: string
                                  namespace:
                                    description: Namespace of the secret.
                                    type: string
                                required:
                                - key
                                - name
                                - namespace
                                type: object
                              port:
                                description: Port number of the server where to migrate
                                  data from.
                                type: number
                              ssl:
                                description: The server where to migrate data from
                                  is secured with SSL. The default value is `true`.
                                type: boolean
                              username:
                                description: User name for authentication with the
                                  server where to migrate data from.
                                type: string
                            required:
                            - host
                            - port
                            type: object
                          type: array
                        pg:
                          description: postgresql.conf configuration values.
                          items:
                            properties:
                              autovacuumAnalyzeScaleFactor:
                                description: Specifies a fraction of the table size
                                  to add to autovacuum_analyze_threshold when deciding
                                  whether to trigger an ANALYZE. The default is 0.2
                                  (20% of table size).
                                type: number
                              autovacuumAnalyzeThreshold:
                                description: Specifies the minimum number of inserted,
                                  updated or deleted tuples needed to trigger an  ANALYZE
                                  in any one table. The default is 50 tuples.
                                type: number
                              autovacuumFreezeMaxAge:
                                description: Specifies the maximum age (in transactions)
                                  that a table's pg_class.relfrozenxid field can attain
                                  before a VACUUM operation is forced to prevent transaction
                                  ID wraparound within the table. Note that the system
                                  will launch autovacuum processes to prevent wraparound
                                  even when autovacuum is otherwise disabled. This
                                  parameter will cause the server to be restarted.
                                type: number
                              autovacuumMaxWorkers:
                                description: Specifies the maximum number of autovacuum
                                  processes (other than the autovacuum launcher) that
                                  may be running at any one time. The default is three.
                                  This parameter can only be set at server start.
                                type: number
                              autovacuumNaptime:
                                description: Specifies the minimum delay between autovacuum
                                  runs on any given database. The delay is measured
                                  in seconds, and the default is one minute.
                                type: number
                              autovacuumVacuumCostDelay:
                                description: Specifies the cost delay value that will
                                  be used in automatic VACUUM operations. If -1 is
                                  specified, the regular vacuum_cost_delay value will
                                  be used. The default value is 20 milliseconds.
                                type: number
                              autovacuumVacuumCostLimit:
                                description: Specifies the cost limit value that will
                                  be used in automatic VACUUM operations. If -1 is
                                  specified (which is the default), the regular vacuum_cost_limit
                                  value will be used.
                                type: number
                              autovacuumVacuumScaleFactor:
                                description: Specifies a fraction of the table size
                                  to add to autovacuum_vacuum_threshold when deciding
                                  whether to trigger a VACUUM. The default is 0.2
                                  (20% of table size).
                                type: number
                              autovacuumVacuumThreshold:
                                description: Specifies the minimum number of updated
                                  or deleted tuples needed to trigger a VACUUM in
                                  any one table. The default is 50 tuples.
                                type: number
                              bgwriterDelay:
                                description: Specifies the delay between activity
                                  rounds for the background writer in milliseconds.
                                  Default is 200.
                                type: number
                              bgwriterFlushAfter:
                                description: Whenever more than bgwriter_flush_after
                                  bytes have been written by the background writer,
                                  attempt to force the OS to issue these writes to
                                  the underlying storage. Specified in kilobytes,
                                  default is 512. Setting of 0 disables forced writeback.
                                type: number
                              bgwriterLruMaxpages:
                                description: In each round, no more than this many
                                  buffers will be written by the background writer.
                                  Setting this to zero disables background writing.
                                  Default is 100.
                                type: number
                              bgwriterLruMultiplier:
                                description: The average recent need for new buffers
                                  is multiplied by bgwriter_lru_multiplier to arrive
                                  at an estimate of the number that will be needed
                                  during the next round, (up to bgwriter_lru_maxpages).
                                  1.0 represents a “just in time” policy of writing
                                  exactly the number of buffers predicted to be needed.
                                  Larger values provide some cushion against spikes
                                  in demand, while smaller values intentionally leave
                                  writes to be done by server processes. The default
                                  is 2.0.
                                type: number
                              deadlockTimeout:
                                description: This is the amount of time, in milliseconds,
                                  to wait on a lock before checking to see if there
                                  is a deadlock condition.
                                type: number
                              defaultToastCompression:
                                description: Specifies the default TOAST compression
                                  method for values of compressible columns (the default
                                  is lz4).
                                type: string
                              idleInTransactionSessionTimeout:
                                description: Time out sessions with open transactions
                                  after this number of milliseconds.
                                type: number
                              jit:
                                description: Controls system-wide use of Just-in-Time
                                  Compilation (JIT).
                                type: boolean
                              logAutovacuumMinDuration:
                                description: Causes each action executed by autovacuum
                                  to be logged if it ran for at least the specified
                                  number of milliseconds. Setting this to zero logs
                                  all autovacuum actions. Minus-one (the default)
                                  disables logging autovacuum actions.
                                type: number
                              logErrorVerbosity:
                                description: Controls the amount of detail written
                                  in the server log for each message that is logged.
                                type: string
                              logLinePrefix:
                                description: Choose from one of the available log-formats.
                                  These can support popular log analyzers like pgbadger,
                                  pganalyze etc.
                                type: string
                              logMinDurationStatement:
                                description: Log statements that take more than this
                                  number of milliseconds to run, -1 disables.
                                type: number
                              logTempFiles:
                                description: Log statements for each temporary file
                                  created larger than this number of kilobytes, -1
                                  disables.
                                type: number
                              maxFilesPerProcess:
                                description: PostgreSQL maximum number of files that
                                  can be open per process.
                                type: number
                              maxLocksPerTransaction:
                                description: PostgreSQL maximum locks per transaction.
                                type: number
                              maxLogicalReplicationWorkers:
                                description: PostgreSQL maximum logical replication
                                  workers (taken from the pool of max_parallel_workers).
                                type: number
                              maxParallelWorkers:
                                description: Sets the maximum number of workers that
                                  the system can support for parallel queries.
                                type: number
                              maxParallelWorkersPerGather:
                                description: Sets the maximum number of workers that
                                  can be started by a single Gather or Gather Merge
                                  node.
                                type: number
                              maxPredLocksPerTransaction:
                                description: PostgreSQL maximum predicate locks per
                                  transaction.
                                type: number
                              maxPreparedTransactions:
                                description: PostgreSQL maximum prepared transactions.
                                type: number
                              maxReplicationSlots:
                                description: PostgreSQL maximum replication slots.
                                type: number
                              maxSlotWalKeepSize:
                                description: PostgreSQL maximum WAL size (MB) reserved
                                  for replication slots. Default is -1 (unlimited).
                                  wal_keep_size minimum WAL size setting takes precedence
                                  over this.
                                type: number
                              maxStackDepth:
                                description: Maximum depth of the stack in bytes.
                                type: number
                              maxStandbyArchiveDelay:
                                description: Max standby archive delay in milliseconds.
                                type: number
                              maxStandbyStreamingDelay:
                                description: Max standby streaming delay in milliseconds.
                                type: number
                              maxWalSenders:
                                description: PostgreSQL maximum WAL senders.
                                type: number
                              maxWorkerProcesses:
                                description: Sets the maximum number of background
                                  processes that the system can support.
                                type: number
                              pgPartmanBgwDotInterval:
                                description: Sets the time interval to run pg_partman's
                                  scheduled tasks.
                                type: number
                              pgPartmanBgwDotRole:
                                description: Controls which role to use for pg_partman's
                                  scheduled background tasks.
                                type: string
                              pgStatMonitorDotPgsmEnableQueryPlan:
                                description: Enables or disables query plan monitoring.
                                type: boolean
                              pgStatMonitorDotPgsmMaxBuckets:
                                description: Sets the maximum number of buckets .
                                type: number
                              pgStatStatementsDotTrack:
                                description: Controls which statements are counted.
                                  Specify top to track top-level statements (those
                                  issued directly by clients), all to also track nested
                                  statements (such as statements invoked within functions),
                                  or none to disable statement statistics collection.
                                  The default value is top.
                                type: string
                              tempFileLimit:
                                description: PostgreSQL temporary file limit in KiB,
                                  -1 for unlimited.
                                type: number
                              timezone:
                                description: PostgreSQL service timezone.
                                type: string
                              trackActivityQuerySize:
                                description: Specifies the number of bytes reserved
                                  to track the currently executing command for each
                                  active session.
                                type: number
                              trackCommitTimestamp:
                                description: Record commit time of transactions.
                                type: string
                              trackFunctions:
                                description: Enables tracking of function call counts
                                  and time used.
                                type: string
                              trackIoTiming:
                                description: Enables timing of database I/O calls.
                                  This parameter is off by default, because it will
                                  repeatedly query the operating system for the current
                                  time, which may cause significant overhead on some
                                  platforms.
                                type: string
                              walSenderTimeout:
                                description: Terminate replication connections that
                                  are inactive for longer than this amount of time,
                                  in milliseconds. Setting this value to zero disables
                                  the timeout.
                                type: number
                              walWriterDelay:
                                description: WAL flush interval in milliseconds. Note
                                  that setting this value to lower than the default
                                  200ms may negatively impact performance.
                                type: number
                            type: object
                          type: array
                        pgReadReplica:
                          description: Use read_replica service integration instead.
                          type: boolean
                        pgServiceToForkFrom:
                          description: Name of the PG Service from which to fork (deprecated,
                            use service_to_fork_from). This has effect only when a
                            new service is being created.
                          type: string
                        pgStatMonitorEnable:
                          description: Enable the pg_stat_monitor extension. Enabling
                            this extension will cause the cluster to be restarted.When
                            this extension is enabled, pg_stat_statements results
                            for utility commands are unreliable. The default value
                            is `false`.
                          type: boolean
                        pgVersion:
                          description: PostgreSQL major version.
                          type: string
                        pgbouncer:
                          description: PGBouncer connection pooling settings.
                          items:
                            properties:
                              autodbIdleTimeout:
                                description: If the automatically created database
                                  pools have been unused this many seconds, they are
                                  freed. If 0 then timeout is disabled. (seconds).
                                type: number
                              autodbMaxDbConnections:
                                description: Do not allow more than this many server
                                  connections per database (regardless of user). Setting
                                  it to 0 means unlimited.
                                type: number
                              autodbPoolMode:
                                description: PGBouncer pool mode.
                                type: string
                              autodbPoolSize:
                                description: If non-zero then create automatically
                                  a pool of that size per user when a pool doesn't
                                  exist.
                                type: number
                              ignoreStartupParameters:
                                description: List of parameters to ignore when given
                                  in startup packet.
                                items:
                                  type: string
                                type: array
                              minPoolSize:
                                description: Add more server connections to pool if
                                  below this number. Improves behavior when usual
                                  load comes suddenly back after period of total inactivity.
                                  The value is effectively capped at the pool size.
                                type: number
                              serverIdleTimeout:
                                description: If a server connection has been idle
                                  more than this many seconds it will be dropped.
                                  If 0 then timeout is disabled. (seconds).
                                type: number
                              serverLifetime:
                                description: The pooler will close an unused server
                                  connection that has been connected longer than this.
                                  (seconds).
                                type: number
                              serverResetQueryAlways:
                                description: Run server_reset_query (DISCARD ALL)
                                  in all pooling modes.
                                type: boolean
                            type: object
                          type: array
                        pglookout:
                          description: PGLookout settings.
                          items:
                            properties:
                              maxFailoverReplicationTimeLag:
                                description: Number of seconds of master unavailability
                                  before triggering database failover to standby.
                                  The default value is `60`.
                                type: number
                            type: object
                          type: array
                        privateAccess:
                          description: Allow access to selected service ports from
                            private networks.
                          items:
                            properties:
                              pg:
                                description: Allow clients to connect to pg with a
                                  DNS name that always resolves to the service's private
                                  IP addresses. Only available in certain network
                                  locations.
                                type: boolean
                              pgbouncer:
                                description: Allow clients to connect to pgbouncer
                                  with a DNS name that always resolves to the service's
                                  private IP addresses. Only available in certain
                                  network locations.
                                type: boolean
                              prometheus:
                                description: Allow clients to connect to prometheus
                                  with a DNS name that always resolves to the service's
                                  private IP addresses. Only available in certain
                                  network locations.
                                type: boolean
                            type: object
                          type: array
                        privatelinkAccess:
                          description: Allow access to selected service components
                            through Privatelink.
                          items:
                            properties:
                              pg:
                                description: Enable pg.
                                type: boolean
                              pgbouncer:
                                description: Enable pgbouncer.
                                type: boolean
                              prometheus:
                                description: Enable prometheus.
                                type: boolean
                            type: object
                          type: array
                        projectToForkFrom:
                          description: Name of another project to fork a service from.
                            This has effect only when a new service is being created.
                          type: string
                        publicAccess:
                          description: Allow access to selected service ports from
                            the public Internet.
                          items:
                            properties:
                              pg:
                                description: Allow clients to connect to pg from the
                                  public internet for service nodes that are in a
                                  project VPC or another type of private network.
                                type: boolean
                              pgbouncer:
                                description: Allow clients to connect to pgbouncer
                                  from the public internet for service nodes that
                                  are in a project VPC or another type of private
                                  network.
                                type: boolean
                              prometheus:
                                description: Allow clients to connect to prometheus
                                  from the public internet for service nodes that
                                  are in a project VPC or another type of private
                                  network.
                                type: boolean
                            type: object
                          type: array
                        recoveryTargetTime:
                          description: Recovery target time when forking a service.
                            This has effect only when a new service is being created.
                          type: string
                        serviceToForkFrom:
                          description: Name of another service to fork from. This
                            has effect only when a new service is being created.
                          type: string
                        sharedBuffersPercentage:
                          description: Percentage of total RAM that the database server
                            uses for shared memory buffers. Valid range is 20-60 (float),
                            which corresponds to 20% - 60%. This setting adjusts the
                            shared_buffers configuration value.
                          type: number
                        staticIps:
                          description: Use static public IP addresses.
                          type: boolean
                        synchronousReplication:
                          description: Synchronous replication type. Note that the
                            service plan also needs to support synchronous replication.
                          type: string
                        timescaledb:
                          description: TimescaleDB extension configuration values.
                          items:
                            properties:
                              maxBackgroundWorkers:
                                description: The number of background workers for
                                  timescaledb operations. You should configure this
                                  setting to the sum of your number of databases and
                                  the total number of concurrent background workers
                                  you want running at any given point in time.
                                type: number
                            type: object
                          type: array
                        variant:
                          description: Variant of the PostgreSQL service, may affect
                            the features that are exposed by default.
                          type: string
                        workMem:
                          description: Sets the maximum amount of memory to be used
                            by a query operation (such as a sort or hash table) before
                            writing to temporary disk files, in MB. Default is 1MB
                            + 0.075% of total RAM (up to 32MB).
                          type: number
                      type: object
                    type: array
                  plan:
                    description: Defines what kind of computing resources are allocated
                      for the service. It can be changed after creation, though there
                      are some restrictions when going to a smaller plan such as the
                      new plan must have sufficient amount of disk space to store
                      all current data and switching to a plan with fewer nodes might
                      not be supported. The basic plan names are `hobbyist`, `startup-x`,
                      `business-x` and `premium-x` where `x` is (roughly) the amount
                      of memory on each node (also other attributes like number of
                      CPUs and amount of disk space varies but naming is based on
                      memory). The available options can be seem from the [Aiven pricing
                      page](https://aiven.io/pricing).
                    type: string
                  project:
                    description: Identifies the project this resource belongs to.
                      To set up proper dependencies please refer to this variable
                      as a reference. This property cannot be changed, doing so forces
                      recreation of the resource.
                    type: string
                  projectVpcId:
                    description: Specifies the VPC the service should run in. If the
                      value is not set the service is not run inside a VPC. When set,
                      the value should be given as a reference to set up dependencies
                      correctly and the VPC must be in the same cloud and region as
                      the service itself. Project can be freely moved to and from
                      VPC after creation but doing so triggers migration to new servers
                      so the operation can take significant amount of time to complete
                      if the service has a lot of data.
                    type: string
                  serviceIntegrations:
                    description: Service integrations to specify when creating a service.
                      Not applied after initial service creation
                    items:
                      properties:
                        integrationType:
                          description: Type of the service integration. The only supported
                            value at the moment is `read_replica`
                          type: string
                        sourceServiceName:
                          description: Name of the source service
                          type: string
                      required:
                      - integrationType
                      - sourceServiceName
                      type: object
                    type: array
                  staticIps:
                    description: Static IPs that are going to be associated with this
                      service. Please assign a value using the 'toset' function. Once
                      a static ip resource is in the 'assigned' state it cannot be
                      unbound from the node again
                    items:
                      type: string
                    type: array
                  tag:
                    description: Tags are key-value pairs that allow you to categorize
                      services.
                    items:
                      properties:
                        key:
                          description: Service tag key
                          type: string
                        value:
                          description: Service tag value
                          type: string
                      required:
                      - key
                      - value
                      type: object
                    type: array
                  terminationProtection:
                    description: Prevents the service from being deleted. It is recommended
                      to set this to `true` for all production services to prevent
                      unintentional service deletion. This does not shield against
                      deleting databases or topics but for services with backups much
                      of the content can at least be restored from backup in case
                      accidental deletion is done.
                    type: boolean
                required:
                - project
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: plan is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.plan)
          status:
            description: ServiceStatus defines the observed state of Service.
            properties:
              atProvider:
                properties:
                  additionalDiskSpace:
                    description: Additional disk space. Possible values depend on
                      the service type, the cloud provider and the project. Therefore,
                      reducing will result in the service rebalancing.
                    type: string
                  cloudName:
                    description: Defines where the cloud provider and region where
                      the service is hosted in. This can be changed freely after service
                      is created. Changing the value will trigger a potentially lengthy
                      migration process for the service. Format is cloud provider
                      name (`aws`, `azure`, `do` `google`, `upcloud`, etc.), dash,
                      and the cloud provider specific region name. These are documented
                      on each Cloud provider's own support articles, like [here for
                      Google](https://cloud.google.com/compute/docs/regions-zones/)
                      and [here for AWS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).
                    type: string
                  components:
                    description: Service component information objects
                    items:
                      properties:
                        component:
                          type: string
                        host:
                          type: string
                        kafkaAuthenticationMethod:
                          type: string
                        port:
                          type: number
                        route:
                          type: string
                        ssl:
                          type: boolean
                        usage:
                          type: string
                      type: object
                    type: array
                  diskSpace:
                    description: Service disk space. Possible values depend on the
                      service type, the cloud provider and the project. Therefore,
                      reducing will result in the service rebalancing.
                    type: string
                  diskSpaceCap:
                    description: The maximum disk space of the service, possible values
                      depend on the service type, the cloud provider and the project.
                    type: string
                  diskSpaceDefault:
                    description: The default disk space of the service, possible values
                      depend on the service type, the cloud provider and the project.
                      Its also the minimum value for `disk_space`
                    type: string
                  diskSpaceStep:
                    description: The default disk space step of the service, possible
                      values depend on the service type, the cloud provider and the
                      project. `disk_space` needs to increment from `disk_space_default`
                      by increments of this size.
                    type: string
                  diskSpaceUsed:
                    description: Disk space that service is currently using
                    type: string
                  id:
                    type: string
                  maintenanceWindowDow:
                    description: Day of week when maintenance operations should be
                      performed. One monday, tuesday, wednesday, etc.
                    type: string
                  maintenanceWindowTime:
                    description: Time of day when maintenance operations should be
                      performed. UTC time in HH:mm:ss format.
                    type: string
                  pg:
                    description: PostgreSQL specific server provided values
                    items:
                      properties:
                        dbname:
                          description: Primary PostgreSQL database name
                          type: string
                        host:
                          description: PostgreSQL master node host IP or name
                          type: string
                        maxConnections:
                          description: Connection limit
                          type: number
                        port:
                          description: PostgreSQL port
                          type: number
                        sslmode:
                          description: PostgreSQL sslmode setting (currently always
                            "require")
                          type: string
                        user:
                          description: PostgreSQL admin user name
                          type: string
                      type: object
                    type: array
                  pgUserConfig:
                    description: Pg user configurable settings
                    items:
                      properties:
                        additionalBackupRegions:
                          description: Additional Cloud Regions for Backup Replication.
                          items:
                            type: string
                          type: array
                        adminUsername:
                          description: Custom username for admin user. This must be
                            set only when a new service is being created.
                          type: string
                        backupHour:
                          description: The hour of day (in UTC) when backup for the
                            service is started. New backup is only started if previous
                            backup has already completed.
                          type: number
                        backupMinute:
                          description: The minute of an hour when backup for the service
                            is started. New backup is only started if previous backup
                            has already completed.
                          type: number
                        enableIpv6:
                          description: Register AAAA DNS records for the service,
                            and allow IPv6 packets to service ports.
                          type: boolean
                        ipFilter:
                          description: Allow incoming connections from CIDR address
                            block, e.g. '10.20.0.0/16'.
                          items:
                            type: string
                          type: array
                        ipFilterObject:
                          description: Allow incoming connections from CIDR address
                            block, e.g. '10.20.0.0/16'.
                          items:
                            properties:
                              description:
                                description: Description for IP filter list entry.
                                type: string
                              network:
                                description: CIDR address block.
                                type: string
                            type: object
                          type: array
                        ipFilterString:
                          description: Allow incoming connections from CIDR address
                            block, e.g. '10.20.0.0/16'.
                          items:
                            type: string
                          type: array
                        migration:
                          description: Migrate data from existing server.
                          items:
                            properties:
                              dbname:
                                description: Database name for bootstrapping the initial
                                  connection.
                                type: string
                              host:
                                description: Hostname or IP address of the server
                                  where to migrate data from.
                                type: string
                              ignoreDbs:
                                description: Comma-separated list of databases, which
                                  should be ignored during migration (supported by
                                  MySQL and PostgreSQL only at the moment).
                                type: string
                              method:
                                description: The migration method to be used (currently
                                  supported only by Redis, MySQL and PostgreSQL service
                                  types).
                                type: string
                              port:
                                description: Port number of the server where to migrate
                                  data from.
                                type: number
                              ssl:
                                description: The server where to migrate data from
                                  is secured with SSL. The default value is `true`.
                                type: boolean
                              username:
                                description: User name for authentication with the
                                  server where to migrate data from.
                                type: string
                            type: object
                          type: array
                        pg:
                          description: postgresql.conf configuration values.
                          items:
                            properties:
                              autovacuumAnalyzeScaleFactor:
                                description: Specifies a fraction of the table size
                                  to add to autovacuum_analyze_threshold when deciding
                                  whether to trigger an ANALYZE. The default is 0.2
                                  (20% of table size).
                                type: number
                              autovacuumAnalyzeThreshold:
                                description: Specifies the minimum number of inserted,
                                  updated or deleted tuples needed to trigger an  ANALYZE
                                  in any one table. The default is 50 tuples.
                                type: number
                              autovacuumFreezeMaxAge:
                                description: Specifies the maximum age (in transactions)
                                  that a table's pg_class.relfrozenxid field can attain
                                  before a VACUUM operation is forced to prevent transaction
                                  ID wraparound within the table. Note that the system
                                  will launch autovacuum processes to prevent wraparound
                                  even when autovacuum is otherwise disabled. This
                                  parameter will cause the server to be restarted.
                                type: number
                              autovacuumMaxWorkers:
                                description: Specifies the maximum number of autovacuum
                                  processes (other than the autovacuum launcher) that
                                  may be running at any one time. The default is three.
                                  This parameter can only be set at server start.
                                type: number
                              autovacuumNaptime:
                                description: Specifies the minimum delay between autovacuum
                                  runs on any given database. The delay is measured
                                  in seconds, and the default is one minute.
                                type: number
                              autovacuumVacuumCostDelay:
                                description: Specifies the cost delay value that will
                                  be used in automatic VACUUM operations. If -1 is
                                  specified, the regular vacuum_cost_delay value will
                                  be used. The default value is 20 milliseconds.
                                type: number
                              autovacuumVacuumCostLimit:
                                description: Specifies the cost limit value that will
                                  be used in automatic VACUUM operations. If -1 is
                                  specified (which is the default), the regular vacuum_cost_limit
                                  value will be used.
                                type: number
                              autovacuumVacuumScaleFactor:
                                description: Specifies a fraction of the table size
                                  to add to autovacuum_vacuum_threshold when deciding
                                  whether to trigger a VACUUM. The default is 0.2
                                  (20% of table size).
                                type: number
                              autovacuumVacuumThreshold:
                                description: Specifies the minimum number of updated
                                  or deleted tuples needed to trigger a VACUUM in
                                  any one table. The default is 50 tuples.
                                type: number
                              bgwriterDelay:
                                description: Specifies the delay between activity
                                  rounds for the background writer in milliseconds.
                                  Default is 200.
                                type: number
                              bgwriterFlushAfter:
                                description: Whenever more than bgwriter_flush_after
                                  bytes have been written by the background writer,
                                  attempt to force the OS to issue these writes to
                                  the underlying storage. Specified in kilobytes,
                                  default is 512. Setting of 0 disables forced writeback.
                                type: number
                              bgwriterLruMaxpages:
                                description: In each round, no more than this many
                                  buffers will be written by the background writer.
                                  Setting this to zero disables background writing.
                                  Default is 100.
                                type: number
                              bgwriterLruMultiplier:
                                description: The average recent need for new buffers
                                  is multiplied by bgwriter_lru_multiplier to arrive
                                  at an estimate of the number that will be needed
                                  during the next round, (up to bgwriter_lru_maxpages).
                                  1.0 represents a “just in time” policy of writing
                                  exactly the number of buffers predicted to be needed.
                                  Larger values provide some cushion against spikes
                                  in demand, while smaller values intentionally leave
                                  writes to be done by server processes. The default
                                  is 2.0.
                                type: number
                              deadlockTimeout:
                                description: This is the amount of time, in milliseconds,
                                  to wait on a lock before checking to see if there
                                  is a deadlock condition.
                                type: number
                              defaultToastCompression:
                                description: Specifies the default TOAST compression
                                  method for values of compressible columns (the default
                                  is lz4).
                                type: string
                              idleInTransactionSessionTimeout:
                                description: Time out sessions with open transactions
                                  after this number of milliseconds.
                                type: number
                              jit:
                                description: Controls system-wide use of Just-in-Time
                                  Compilation (JIT).
                                type: boolean
                              logAutovacuumMinDuration:
                                description: Causes each action executed by autovacuum
                                  to be logged if it ran for at least the specified
                                  number of milliseconds. Setting this to zero logs
                                  all autovacuum actions. Minus-one (the default)
                                  disables logging autovacuum actions.
                                type: number
                              logErrorVerbosity:
                                description: Controls the amount of detail written
                                  in the server log for each message that is logged.
                                type: string
                              logLinePrefix:
                                description: Choose from one of the available log-formats.
                                  These can support popular log analyzers like pgbadger,
                                  pganalyze etc.
                                type: string
                              logMinDurationStatement:
                                description: Log statements that take more than this
                                  number of milliseconds to run, -1 disables.
                                type: number
                              logTempFiles:
                                description: Log statements for each temporary file
                                  created larger than this number of kilobytes, -1
                                  disables.
                                type: number
                              maxFilesPerProcess:
                                description: PostgreSQL maximum number of files that
                                  can be open per process.
                                type: number
                              maxLocksPerTransaction:
                                description: PostgreSQL maximum locks per transaction.
                                type: number
                              maxLogicalReplicationWorkers:
                                description: PostgreSQL maximum logical replication
                                  workers (taken from the pool of max_parallel_workers).
                                type: number
                              maxParallelWorkers:
                                description: Sets the maximum number of workers that
                                  the system can support for parallel queries.
                                type: number
                              maxParallelWorkersPerGather:
                                description: Sets the maximum number of workers that
                                  can be started by a single Gather or Gather Merge
                                  node.
                                type: number
                              maxPredLocksPerTransaction:
                                description: PostgreSQL maximum predicate locks per
                                  transaction.
                                type: number
                              maxPreparedTransactions:
                                description: PostgreSQL maximum prepared transactions.
                                type: number
                              maxReplicationSlots:
                                description: PostgreSQL maximum replication slots.
                                type: number
                              maxSlotWalKeepSize:
                                description: PostgreSQL maximum WAL size (MB) reserved
                                  for replication slots. Default is -1 (unlimited).
                                  wal_keep_size minimum WAL size setting takes precedence
                                  over this.
                                type: number
                              maxStackDepth:
                                description: Maximum depth of the stack in bytes.
                                type: number
                              maxStandbyArchiveDelay:
                                description: Max standby archive delay in milliseconds.
                                type: number
                              maxStandbyStreamingDelay:
                                description: Max standby streaming delay in milliseconds.
                                type: number
                              maxWalSenders:
                                description: PostgreSQL maximum WAL senders.
                                type: number
                              maxWorkerProcesses:
                                description: Sets the maximum number of background
                                  processes that the system can support.
                                type: number
                              pgPartmanBgwDotInterval:
                                description: Sets the time interval to run pg_partman's
                                  scheduled tasks.
                                type: number
                              pgPartmanBgwDotRole:
                                description: Controls which role to use for pg_partman's
                                  scheduled background tasks.
                                type: string
                              pgStatMonitorDotPgsmEnableQueryPlan:
                                description: Enables or disables query plan monitoring.
                                type: boolean
                              pgStatMonitorDotPgsmMaxBuckets:
                                description: Sets the maximum number of buckets .
                                type: number
                              pgStatStatementsDotTrack:
                                description: Controls which statements are counted.
                                  Specify top to track top-level statements (those
                                  issued directly by clients), all to also track nested
                                  statements (such as statements invoked within functions),
                                  or none to disable statement statistics collection.
                                  The default value is top.
                                type: string
                              tempFileLimit:
                                description: PostgreSQL temporary file limit in KiB,
                                  -1 for unlimited.
                                type: number
                              timezone:
                                description: PostgreSQL service timezone.
                                type: string
                              trackActivityQuerySize:
                                description: Specifies the number of bytes reserved
                                  to track the currently executing command for each
                                  active session.
                                type: number
                              trackCommitTimestamp:
                                description: Record commit time of transactions.
                                type: string
                              trackFunctions:
                                description: Enables tracking of function call counts
                                  and time used.
                                type: string
                              trackIoTiming:
                                description: Enables timing of database I/O calls.
                                  This parameter is off by default, because it will
                                  repeatedly query the operating system for the current
                                  time, which may cause significant overhead on some
                                  platforms.
                                type: string
                              walSenderTimeout:
                                description: Terminate replication connections that
                                  are inactive for longer than this amount of time,
                                  in milliseconds. Setting this value to zero disables
                                  the timeout.
                                type: number
                              walWriterDelay:
                                description: WAL flush interval in milliseconds. Note
                                  that setting this value to lower than the default
                                  200ms may negatively impact performance.
                                type: number
                            type: object
                          type: array
                        pgReadReplica:
                          description: Use read_replica service integration instead.
                          type: boolean
                        pgServiceToForkFrom:
                          description: Name of the PG Service from which to fork (deprecated,
                            use service_to_fork_from). This has effect only when a
                            new service is being created.
                          type: string
                        pgStatMonitorEnable:
                          description: Enable the pg_stat_monitor extension. Enabling
                            this extension will cause the cluster to be restarted.When
                            this extension is enabled, pg_stat_statements results
                            for utility commands are unreliable. The default value
                            is `false`.
                          type: boolean
                        pgVersion:
                          description: PostgreSQL major version.
                          type: string
                        pgbouncer:
                          description: PGBouncer connection pooling settings.
                          items:
                            properties:
                              autodbIdleTimeout:
                                description: If the automatically created database
                                  pools have been unused this many seconds, they are
                                  freed. If 0 then timeout is disabled. (seconds).
                                type: number
                              autodbMaxDbConnections:
                                description: Do not allow more than this many server
                                  connections per database (regardless of user). Setting
                                  it to 0 means unlimited.
                                type: number
                              autodbPoolMode:
                                description: PGBouncer pool mode.
                                type: string
                              autodbPoolSize:
                                description: If non-zero then create automatically
                                  a pool of that size per user when a pool doesn't
                                  exist.
                                type: number
                              ignoreStartupParameters:
                                description: List of parameters to ignore when given
                                  in startup packet.
                                items:
                                  type: string
                                type: array
                              minPoolSize:
                                description: Add more server connections to pool if
                                  below this number. Improves behavior when usual
                                  load comes suddenly back after period of total inactivity.
                                  The value is effectively capped at the pool size.
                                type: number
                              serverIdleTimeout:
                                description: If a server connection has been idle
                                  more than this many seconds it will be dropped.
                                  If 0 then timeout is disabled. (seconds).
                                type: number
                              serverLifetime:
                                description: The pooler will close an unused server
                                  connection that has been connected longer than this.
                                  (seconds).
                                type: number
                              serverResetQueryAlways:
                                description: Run server_reset_query (DISCARD ALL)
                                  in all pooling modes.
                                type: boolean
                            type: object
                          type: array
                        pglookout:
                          description: PGLookout settings.
                          items:
                            properties:
                              maxFailoverReplicationTimeLag:
                                description: Number of seconds of master unavailability
                                  before triggering database failover to standby.
                                  The default value is `60`.
                                type: number
                            type: object
                          type: array
                        privateAccess:
                          description: Allow access to selected service ports from
                            private networks.
                          items:
                            properties:
                              pg:
                                description: Allow clients to connect to pg with a
                                  DNS name that always resolves to the service's private
                                  IP addresses. Only available in certain network
                                  locations.
                                type: boolean
                              pgbouncer:
                                description: Allow clients to connect to pgbouncer
                                  with a DNS name that always resolves to the service's
                                  private IP addresses. Only available in certain
                                  network locations.
                                type: boolean
                              prometheus:
                                description: Allow clients to connect to prometheus
                                  with a DNS name that always resolves to the service's
                                  private IP addresses. Only available in certain
                                  network locations.
                                type: boolean
                            type: object
                          type: array
                        privatelinkAccess:
                          description: Allow access to selected service components
                            through Privatelink.
                          items:
                            properties:
                              pg:
                                description: Enable pg.
                                type: boolean
                              pgbouncer:
                                description: Enable pgbouncer.
                                type: boolean
                              prometheus:
                                description: Enable prometheus.
                                type: boolean
                            type: object
                          type: array
                        projectToForkFrom:
                          description: Name of another project to fork a service from.
                            This has effect only when a new service is being created.
                          type: string
                        publicAccess:
                          description: Allow access to selected service ports from
                            the public Internet.
                          items:
                            properties:
                              pg:
                                description: Allow clients to connect to pg from the
                                  public internet for service nodes that are in a
                                  project VPC or another type of private network.
                                type: boolean
                              pgbouncer:
                                description: Allow clients to connect to pgbouncer
                                  from the public internet for service nodes that
                                  are in a project VPC or another type of private
                                  network.
                                type: boolean
                              prometheus:
                                description: Allow clients to connect to prometheus
                                  from the public internet for service nodes that
                                  are in a project VPC or another type of private
                                  network.
                                type: boolean
                            type: object
                          type: array
                        recoveryTargetTime:
                          description: Recovery target time when forking a service.
                            This has effect only when a new service is being created.
                          type: string
                        serviceToForkFrom:
                          description: Name of another service to fork from. This
                            has effect only when a new service is being created.
                          type: string
                        sharedBuffersPercentage:
                          description: Percentage of total RAM that the database server
                            uses for shared memory buffers. Valid range is 20-60 (float),
                            which corresponds to 20% - 60%. This setting adjusts the
                            shared_buffers configuration value.
                          type: number
                        staticIps:
                          description: Use static public IP addresses.
                          type: boolean
                        synchronousReplication:
                          description: Synchronous replication type. Note that the
                            service plan also needs to support synchronous replication.
                          type: string
                        timescaledb:
                          description: TimescaleDB extension configuration values.
                          items:
                            properties:
                              maxBackgroundWorkers:
                                description: The number of background workers for
                                  timescaledb operations. You should configure this
                                  setting to the sum of your number of databases and
                                  the total number of concurrent background workers
                                  you want running at any given point in time.
                                type: number
                            type: object
                          type: array
                        variant:
                          description: Variant of the PostgreSQL service, may affect
                            the features that are exposed by default.
                          type: string
                        workMem:
                          description: Sets the maximum amount of memory to be used
                            by a query operation (such as a sort or hash table) before
                            writing to temporary disk files, in MB. Default is 1MB
                            + 0.075% of total RAM (up to 32MB).
                          type: number
                      type: object
                    type: array
                  plan:
                    description: Defines what kind of computing resources are allocated
                      for the service. It can be changed after creation, though there
                      are some restrictions when going to a smaller plan such as the
                      new plan must have sufficient amount of disk space to store
                      all current data and switching to a plan with fewer nodes might
                      not be supported. The basic plan names are `hobbyist`, `startup-x`,
                      `business-x` and `premium-x` where `x` is (roughly) the amount
                      of memory on each node (also other attributes like number of
                      CPUs and amount of disk space varies but naming is based on
                      memory). The available options can be seem from the [Aiven pricing
                      page](https://aiven.io/pricing).
                    type: string
                  project:
                    description: Identifies the project this resource belongs to.
                      To set up proper dependencies please refer to this variable
                      as a reference. This property cannot be changed, doing so forces
                      recreation of the resource.
                    type: string
                  projectVpcId:
                    description: Specifies the VPC the service should run in. If the
                      value is not set the service is not run inside a VPC. When set,
                      the value should be given as a reference to set up dependencies
                      correctly and the VPC must be in the same cloud and region as
                      the service itself. Project can be freely moved to and from
                      VPC after creation but doing so triggers migration to new servers
                      so the operation can take significant amount of time to complete
                      if the service has a lot of data.
                    type: string
                  serviceHost:
                    description: The hostname of the service.
                    type: string
                  serviceIntegrations:
                    description: Service integrations to specify when creating a service.
                      Not applied after initial service creation
                    items:
                      properties:
                        integrationType:
                          description: Type of the service integration. The only supported
                            value at the moment is `read_replica`
                          type: string
                        sourceServiceName:
                          description: Name of the source service
                          type: string
                      type: object
                    type: array
                  servicePort:
                    description: The port of the service
                    type: number
                  serviceType:
                    description: Aiven internal service type code
                    type: string
                  serviceUsername:
                    description: Username used for connecting to the service, if applicable
                    type: string
                  state:
                    description: Service state. One of `POWEROFF`, `REBALANCING`,
                      `REBUILDING` or `RUNNING`
                    type: string
                  staticIps:
                    description: Static IPs that are going to be associated with this
                      service. Please assign a value using the 'toset' function. Once
                      a static ip resource is in the 'assigned' state it cannot be
                      unbound from the node again
                    items:
                      type: string
                    type: array
                  tag:
                    description: Tags are key-value pairs that allow you to categorize
                      services.
                    items:
                      properties:
                        key:
                          description: Service tag key
                          type: string
                        value:
                          description: Service tag value
                          type: string
                      type: object
                    type: array
                  terminationProtection:
                    description: Prevents the service from being deleted. It is recommended
                      to set this to `true` for all production services to prevent
                      unintentional service deletion. This does not shield against
                      deleting databases or topics but for services with backups much
                      of the content can at least be restored from backup in case
                      accidental deletion is done.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
